var cr=Object.defineProperty,ur=Object.defineProperties;var dr=Object.getOwnPropertyDescriptors;var ye=Object.getOwnPropertySymbols;var fr=Object.prototype.hasOwnProperty,pr=Object.prototype.propertyIsEnumerable;var be=(e,a,s)=>a in e?cr(e,a,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[a]=s,_=(e,a)=>{for(var s in a||(a={}))fr.call(a,s)&&be(e,s,a[s]);if(ye)for(var s of ye(a))pr.call(a,s)&&be(e,s,a[s]);return e},E=(e,a)=>ur(e,dr(a));import{V as m,B as hr,P as gr,a as v,n as R,C as P,A as ce,b as V,E as mr,c as k,T as _r,m as vr,d as G,p as yr,h as br,t as Tr,R as kr,D as wr,e as Lr,W as ue,G as Pr,F as $r,O as Cr,f as Rr,g as Or,i as Ir,j as Ar,k as Sr,l as Er,o as He,q as Me,s as Br,r as Dr,u as xr}from"./vendor.4be520cf.js";const Nr=function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function s(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerpolicy&&(r.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?r.credentials="include":t.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(t){if(t.ep)return;t.ep=!0;const r=s(t);fetch(t.href,r)}};Nr();m.use(hr);m.use(gr);const se="ftAuthLoginInfo",U="/api/v1";class ${constructor(a){console.log("botId",a),this.botId=a}storeLoginInfo(a){const s=$.getAllLoginInfos();s[this.botId]=a,localStorage.setItem(se,JSON.stringify(s))}removeLoginInfo(){const a=$.getAllLoginInfos();delete a[this.botId],localStorage.setItem(se,JSON.stringify(a))}setAccessToken(a){const s=this.getLoginInfo();s.accessToken=a,this.storeLoginInfo(s)}setAutoRefresh(a){const s=this.getLoginInfo();s.autoRefresh=a,this.storeLoginInfo(s)}static getAllLoginInfos(){return JSON.parse(localStorage.getItem(se)||"{}")}getLoginInfo(){const a=$.getAllLoginInfos();return this.botId in a&&"apiUrl"in a[this.botId]&&"refreshToken"in a[this.botId]?a[this.botId]:{botName:"",apiUrl:"",refreshToken:"",accessToken:"",autoRefresh:!1}}static getAvailableBots(){const a=$.getAllLoginInfos(),s={};return Object.entries(a).forEach(([n,t])=>{s[n]={botId:n,botName:t.botName,botUrl:t.apiUrl}}),s}static getAvailableBotList(){const a=$.getAllLoginInfos();return Object.keys(a)}getAutoRefresh(){return this.getLoginInfo().autoRefresh}getAccessToken(){return this.getLoginInfo().accessToken}getRefreshToken(){return this.getLoginInfo().refreshToken}loggedIn(){return this.getLoginInfo().refreshToken!==""}getAPIUrl(){return this.getLoginInfo().apiUrl}logout(){console.log("Logging out"),this.removeLoginInfo()}async login(a){const{data:s}=await v.post(`${a.url}/api/v1/token/login`,{},{auth:_({},a)});if(s.access_token&&s.refresh_token){const n={botName:a.botName,apiUrl:a.url,accessToken:s.access_token||"",refreshToken:s.refresh_token||"",autoRefresh:!0};this.storeLoginInfo(n)}}refreshToken(){console.log("Refreshing token...");const a=this.getRefreshToken();return new Promise((s,n)=>{v.post(`${this.getAPIUrl()}${U}/token/refresh`,{},{headers:{Authorization:`Bearer ${a}`}}).then(t=>{t.data.access_token&&(this.setAccessToken(t.data.access_token),s(t.data.access_token))}).catch(t=>{console.error(t),t.response&&t.response.status===401?this.logout():t.response&&(t.response.status===500||t.response.status===404)&&(console.log("Bot seems to be offline... - retrying later"),n(t))})})}getBaseUrl(){const a=this.getAPIUrl();return a===null?U:a.endsWith(U)?`${a}${U}`:`${a}${U}`}static migrateLogin(){const a="auth_ref_token",s="auth_access_token",n="auth_api_url",t="ft_auto_refresh",r=JSON.parse(localStorage.getItem(n)||"{}"),o=JSON.parse(localStorage.getItem(a)||"{}"),l=JSON.parse(localStorage.getItem(s)||"{}"),i=JSON.parse(localStorage.getItem(t)||"{}");if(typeof r=="string"&&typeof o=="string"&&typeof l=="string"){const u={botName:"",apiUrl:r,refreshToken:o,accessToken:l,autoRefresh:i};new $("ftbot.0").storeLoginInfo(u)}localStorage.removeItem(a),localStorage.removeItem(s),localStorage.removeItem(n),localStorage.removeItem(t)}}function Ve(e){return new $(e)}var h=(e=>(e.ftbot="ftbot",e.alerts="alerts",e.layout="layout",e.uiSettings="uiSettings",e))(h||{});let ze;function jr(e,a){const s=v.create({baseURL:e.getBaseUrl(),timeout:1e4,withCredentials:!0});return s.interceptors.request.use(n=>{const t=n,r=e.getAccessToken();return r&&(t.headers=E(_({},n.headers),{Authorization:`Bearer ${r}`})),t},n=>Promise.reject(n)),s.interceptors.response.use(n=>n,n=>n.response&&n.response.status===401?(console.log("Dispatching refresh_token..."),e.refreshToken().then(t=>{const{config:r}=n;return r.headers.Authorization=`Bearer ${t}`,new Promise((o,l)=>{v.request(r).then(i=>{o(i)}).catch(i=>{l(i)})})}).catch(t=>{console.log("No new token received"),console.log(t)})):((n.response&&n.response.status===500||n.message==="Network Error")&&(console.log("Bot not running..."),ze.dispatch(`ftbot/${a}/setIsBotOnline`,!1)),new Promise((t,r)=>{r(n)}))),{api:s}}function Fr(e){ze=e}var Je=(e=>(e[e.startup=0]="startup",e[e.dataload=1]="dataload",e[e.analyze=2]="analyze",e[e.convert=3]="convert",e[e.backtest=4]="backtest",e.none="",e))(Je||{}),Ur=(e=>(e.line="line",e.bar="bar",e.scatter="scatter",e))(Ur||{});const Ke={main_plot:{},subplots:{}};var qr=(e=>(e.long="long",e.short="short",e))(qr||{}),H=(e=>(e.LIVE="live",e.DRY_RUN="dry_run",e.BACKTEST="backtest",e.EDGE="edge",e.HYPEROPT="hyperopt",e.UTIL_EXCHANGE="util_exchange",e.UTIL_NO_EXCHANGE="util_no_exchange",e.PLOT="plot",e.WEBSERVER="webserver",e.OTHER="other",e))(H||{});const We="ft_custom_plot_config",Ye="ft_selected_plot_config";function Hr(){return localStorage.getItem(Ye)||"default"}function Ze(e){localStorage.setItem(Ye,e)}function de(){return JSON.parse(localStorage.getItem(We)||"{}")}function Xe(){return Object.keys(de())}function As(e){const a=de();return e in a?a[e]:_({},Ke)}function Mr(e){const a=de(),s=_(_({},a),e);localStorage.setItem(We,JSON.stringify(s)),Ze(Object.keys(e)[0])}const Vr=e=>{const a=Object.keys(e);let s="";return a.forEach(n=>{const t=typeof e[n]=="object",r=t&&e[n].length>=0;t||(s+=`${n}=${e[n]}&`),t&&r&&e[n].forEach(o=>{s+=`${n}=${o}&`})}),s&&s.slice(0,-1)},zr=()=>({ping:"",isBotOnline:!1,autoRefresh:!1,refreshing:!1,version:"",lastLogs:[],refreshRequired:!0,trades:[],openTrades:[],tradeCount:0,performanceStats:[],whitelist:[],blacklist:[],profit:{},botState:void 0,balance:{},dailyStats:{},pairlistMethods:[],detailTradeId:void 0,selectedPair:"",candleData:{},candleDataStatus:"loading",history:{},historyStatus:"loading",strategyPlotConfig:void 0,customPlotConfig:{},plotConfigName:Hr(),availablePlotConfigNames:Xe(),strategyList:[],strategy:{},pairlist:[],currentLocks:void 0,backtestRunning:!1,backtestProgress:0,backtestStep:Je.none,backtestTradeCount:0,backtestResult:void 0,selectedBacktestResultKey:"",backtestHistory:{},sysinfo:{}});var fe=(e=>(e.addAlert="addAlert",e.removeAlert="removeAlert",e))(fe||{}),Jr={namespaced:!0,state:{activeMessages:[]},mutations:{addAlert(e,a){console.log(`adding message '${a.message}' to message queue`),e.activeMessages.push(a)},removeAlert(e){e.activeMessages.shift()}},actions:{addAlert({commit:e},a){e("addAlert",a)},removeAlert({commit:e}){e("removeAlert")}}};function p(e,a,s=""){e("alerts/addAlert",{message:a,severity:s},{root:!0})}var T=(e=>(e.botName="botName",e.isBotOnline="isBotOnline",e.autoRefresh="autoRefresh",e.refreshNow="refreshNow",e.refreshing="refreshing",e.openTrades="openTrades",e.openTradeCount="openTradeCount",e.tradeDetail="tradeDetail",e.selectedPair="selectedPair",e.trades="trades",e.closedTrades="closedTrades",e.allTrades="allTrades",e.currentLocks="currentLocks",e.plotConfig="plotConfig",e.availablePlotConfigNames="availablePlotConfigNames",e.plotConfigName="plotConfigName",e.timeframe="timeframe",e.isTrading="isTrading",e.isWebserverMode="isWebserverMode",e.shortAllowed="shortAllowed",e.refreshRequired="refreshRequired",e.selectedBacktestResult="selectedBacktestResult",e.canRunBacktest="canRunBacktest",e.stakeCurrencyDecimals="stakeCurrencyDecimals",e.stakeCurrency="stakeCurrency",e.strategyPlotConfig="strategyPlotConfig",e.version="version",e.botApiVersion="botApiVersion",e.sysinfo="sysinfo",e.profit="profit",e.botState="botState",e.whitelist="whitelist",e.blacklist="blacklist",e.pairlistMethods="pairlistMethods",e.pairlist="pairlist",e.balance="balance",e.detailTradeId="detailTradeId",e.historyStatus="historyStatus",e.history="history",e.lastLogs="lastLogs",e.performanceStats="performanceStats",e.dailyStats="dailyStats",e.strategy="strategy",e.strategyList="strategyList",e.candleDataStatus="candleDataStatus",e.candleData="candleData",e.backtestRunning="backtestRunning",e.backtestStep="backtestStep",e.backtestProgress="backtestProgress",e.backtestHistory="backtestHistory",e.selectedBacktestResultKey="selectedBacktestResultKey",e))(T||{}),N=(e=>(e.botAdded="botAdded",e.ping="ping",e.setIsBotOnline="setIsBotOnline",e.setAutoRefresh="setAutoRefresh",e.setRefreshRequired="setRefreshRequired",e.refreshSlow="refreshSlow",e.refreshFrequent="refreshFrequent",e.setDetailTrade="setDetailTrade",e.setSelectedPair="setSelectedPair",e.saveCustomPlotConfig="saveCustomPlotConfig",e.updatePlotConfigName="updatePlotConfigName",e.getTrades="getTrades",e.getLocks="getLocks",e.deleteLock="deleteLock",e.getOpenTrades="getOpenTrades",e.getPairCandles="getPairCandles",e.getPairHistory="getPairHistory",e.getStrategyPlotConfig="getStrategyPlotConfig",e.setPlotConfigName="setPlotConfigName",e.getStrategyList="getStrategyList",e.getStrategy="getStrategy",e.getAvailablePairs="getAvailablePairs",e.getPerformance="getPerformance",e.getWhitelist="getWhitelist",e.getBlacklist="getBlacklist",e.getProfit="getProfit",e.getBalance="getBalance",e.getDaily="getDaily",e.getState="getState",e.getLogs="getLogs",e.startBot="startBot",e.stopBot="stopBot",e.stopBuy="stopBuy",e.reloadConfig="reloadConfig",e.deleteTrade="deleteTrade",e.startTrade="startTrade",e.forcesell="forcesell",e.forcebuy="forcebuy",e.addBlacklist="addBlacklist",e.deleteBlacklist="deleteBlacklist",e.startBacktest="startBacktest",e.pollBacktest="pollBacktest",e.removeBacktest="removeBacktest",e.stopBacktest="stopBacktest",e.setBacktestResultKey="setBacktestResultKey",e.sysInfo="sysInfo",e.logout="logout",e))(N||{});function Kr(e,a){const s=Ve(e),{api:n}=jr(s,e);return{namespaced:!0,state:zr,getters:{botName(t){var r;return((r=t.botState)==null?void 0:r.bot_name)||"freqtrade"},isBotOnline(t){return t.isBotOnline},autoRefresh(t){return t.autoRefresh},refreshNow(t,r,o,l){const i=l["uiSettings/backgroundSync"];return!!((l[`${h.ftbot}/selectedBot`]===e||i)&&r.autoRefresh&&r.isBotOnline&&!r.isWebserverMode)},plotConfig(t){return t.customPlotConfig[t.plotConfigName]||_({},Ke)},availablePlotConfigNames(t){return t.availablePlotConfigNames},plotConfigName(t){return t.plotConfigName},openTrades(t){return t.openTrades},openTradeCount(t){return t.openTrades.length},allTrades(t){return[...t.openTrades,...t.trades]},currentLocks(t){var r;return((r=t.currentLocks)==null?void 0:r.locks)||[]},tradeDetail(t){let r=t.openTrades.find(o=>o.trade_id===t.detailTradeId);return r||(r=t.trades.find(o=>o.trade_id===t.detailTradeId)),r},selectedPair(t){return t.selectedPair},trades(t){return t.trades},closedTrades(t){return t.trades.filter(r=>!r.is_open).sort((r,o)=>o.close_timestamp&&r.close_timestamp?o.close_timestamp-r.close_timestamp:o.trade_id-r.trade_id)},timeframe(t){var r;return((r=t.botState)==null?void 0:r.timeframe)||""},isTrading(t){var r,o;return((r=t.botState)==null?void 0:r.runmode)===H.LIVE||((o=t.botState)==null?void 0:o.runmode)===H.DRY_RUN},isWebserverMode(t){var r;return((r=t.botState)==null?void 0:r.runmode)===H.WEBSERVER},shortAllowed(t){var r;return((r=t.botState)==null?void 0:r.short_allowed)||!1},refreshRequired(t){return t.refreshRequired},selectedBacktestResult(t){return t.backtestHistory[t.selectedBacktestResultKey]},canRunBacktest(t){var r;return((r=t.botState)==null?void 0:r.runmode)===H.WEBSERVER},stakeCurrencyDecimals(t){var r;return((r=t.botState)==null?void 0:r.stake_currency_decimals)||3},stakeCurrency(t){var r;return((r=t.botState)==null?void 0:r.stake_currency)||""},strategyPlotConfig(t){return t.strategyPlotConfig},version(t){var r;return((r=t.botState)==null?void 0:r.version)||t.version},botApiVersion(t){var r;return((r=t.botState)==null?void 0:r.api_version)||1},sysinfo(t){return t.sysinfo},profit(t){return t.profit},botState(t){return t.botState},whitelist(t){return t.whitelist},blacklist(t){return t.blacklist},pairlistMethods(t){return t.pairlistMethods},pairlist(t){return t.pairlist},balance(t){return t.balance},detailTradeId(t){return t.detailTradeId},lastLogs(t){return t.lastLogs},performanceStats(t){return t.performanceStats},dailyStats(t){return t.dailyStats},strategy(t){return t.strategy},strategyList(t){return t.strategyList},candleDataStatus(t){return t.candleDataStatus},candleData(t){return t.candleData},historyStatus(t){return t.historyStatus},history(t){return t.history},backtestRunning(t){return t.backtestRunning},backtestStep(t){return t.backtestStep},backtestProgress(t){return t.backtestProgress},backtestHistory(t){return t.backtestHistory},selectedBacktestResultKey(t){return t.selectedBacktestResultKey}},mutations:{setPing(t,r){const o=Date.now();t.ping=`${r.status} ${o.toString()}`},setIsBotOnline(t,r){t.isBotOnline=r},setAutoRefresh(t,r){t.autoRefresh=r},setRefreshing(t,r){t.refreshing=r},updateRefreshRequired(t,r){t.refreshRequired=r},updateTrades(t,{trades:r,tradesCount:o}){t.trades=r,t.tradeCount=o},updateOpenTrades(t,r){t.openTrades=r},updateLocks(t,r){t.currentLocks=r},updatePerformance(t,r){t.performanceStats=r},updateWhitelist(t,r){t.whitelist=r.whitelist,t.pairlistMethods=r.method},updateBlacklist(t,r){t.blacklist=r.blacklist},updateProfit(t,r){t.profit=r},updateDaily(t,r){t.dailyStats=r},updateBalance(t,r){t.balance=r},updateState(t,r){t.botState=r},updateVersion(t,r){t.version=r.version},updateLogs(t,r){t.lastLogs=r.logs},setDetailTrade(t,r){t.detailTradeId=r?r.trade_id:void 0,t.selectedPair=r?r.pair:t.selectedPair},setSelectedPair(t,r){t.selectedPair=r},updateStrategyList(t,r){t.strategyList=r.strategies},updateStrategy(t,r){t.strategy=r},updatePairs(t,r){t.pairlist=r},setCandleDataStatus(t,r){t.candleDataStatus=r},updatePairCandles(t,{pair:r,timeframe:o,data:l}){t.candleData=E(_({},t.candleData),{[`${r}__${o}`]:l})},setHistoryStatus(t,r){t.historyStatus=r},updatePairHistory(t,{pair:r,timeframe:o,data:l}){t.history={[`${r}__${o}`]:l}},updatePlotConfig(t,r){t.strategyPlotConfig=r},updatePlotConfigName(t,r){t.plotConfigName=r,Ze(r)},saveCustomPlotConfig(t,r){t.customPlotConfig=r,Mr(r),t.availablePlotConfigNames=Xe()},updateBacktestRunning(t,r){t.backtestRunning=r.running,t.backtestProgress=r.progress,t.backtestStep=r.step,t.backtestTradeCount=r.trade_count||0},updateBacktestResult(t,r){t.backtestResult=r,Object.entries(r.strategy).forEach(([o,l])=>{console.log(o,l);const i=`${o}_${l.total_trades}_${l.profit_total.toFixed(3)}`;t.backtestHistory=E(_({},t.backtestHistory),{[i]:l}),t.selectedBacktestResultKey=i})},resetBacktestHistory(t){t.backtestHistory={}},setBacktestResultKey(t,r){t.selectedBacktestResultKey=r},updateSysInfo(t,r){t.sysinfo=r}},actions:{botAdded({commit:t}){t("setAutoRefresh",s.getAutoRefresh())},async ping({commit:t}){try{const r=await n.get("/ping");return t("setPing",r.data),t("setIsBotOnline",!0),Promise.resolve()}catch{return t("setIsBotOnline",!1),Promise.reject()}},logout(){s.logout()},setRefreshRequired({commit:t},r){t("updateRefreshRequired",r)},setAutoRefresh({dispatch:t,commit:r},o){r("setAutoRefresh",o),s.setAutoRefresh(o)},setIsBotOnline({commit:t},r){t("setIsBotOnline",r)},async refreshSlow({dispatch:t,getters:r,state:o},l=!1){if(!(o.refreshing&&!l)&&(l||r["refreshRequired"])){const i=[];i.push(t("getPerformance")),i.push(t("getProfit")),i.push(t("getTrades")),i.push(t("getBalance")),i.push(t("getWhitelist")),i.push(t("getBlacklist")),await Promise.all(i),t("setRefreshRequired",!1)}},refreshFrequent({dispatch:t}){t("getOpenTrades"),t("getState"),t("getLocks")},setDetailTrade({commit:t},r){t("setDetailTrade",r)},setSelectedPair({commit:t},r){t("setSelectedPair",r)},saveCustomPlotConfig({commit:t},r){t("saveCustomPlotConfig",r)},updatePlotConfigName({commit:t},r){t("updatePlotConfigName",r)},async getTrades({commit:t}){try{let r=0;const o=500,l=async(f,ae)=>n.get("/trades",{params:{limit:f,offset:ae}}),u=(await l(o,0)).data;let{trades:c}=u;if(c.length!==u.total_trades)do{const f=await l(o,c.length),ae=f.data;c=c.concat(ae.trades),r=f.data.total_trades}while(c.length!==r);const w=c.length;return c=c.map(f=>E(_({},f),{botId:e,botName:a,botTradeId:`${e}__${f.trade_id}`})),t("updateTrades",{trades:c,tradesCount:w}),Promise.resolve()}catch(r){return v.isAxiosError(r)&&console.error(r.response),Promise.reject(r)}},getLocks({commit:t}){return n.get("/locks").then(r=>t("updateLocks",r.data)).catch(console.error)},async deleteLock({dispatch:t,commit:r},o){try{const l=await n.delete(`/locks/${o}`);return p(t,`Deleted Lock ${o}.`),r("updateLocks",l.data),Promise.resolve(l)}catch(l){return v.isAxiosError(l)&&console.error(l.response),p(t,`Failed to delete lock ${o}`,"danger"),Promise.reject(l)}},getOpenTrades({commit:t,state:r}){return n.get("/status").then(o=>{Array.isArray(r.openTrades)&&Array.isArray(o.data)&&(r.openTrades.length!==o.data.length||!r.openTrades.every((i,u)=>i.trade_id===o.data[u].trade_id))&&t("updateRefreshRequired",!0);const l=o.data.map(i=>E(_({},i),{botId:e,botName:a,botTradeId:`${e}__${i.trade_id}`}));t("updateOpenTrades",l)}).catch(console.error)},getPairCandles({commit:t},r){if(r.pair&&r.timeframe)return t("setCandleDataStatus","loading"),n.get("/pair_candles",{params:_({},r)}).then(l=>{t("updatePairCandles",{pair:r.pair,timeframe:r.timeframe,data:l.data}),t("setCandleDataStatus","success")}).catch(l=>{console.error(l),t("setCandleDataStatus","error")});const o="pair or timeframe not specified";return console.error(o),new Promise((l,i)=>{i(o)})},getPairHistory({commit:t},r){if(r.pair&&r.timeframe&&r.timerange)return t("setHistoryStatus","loading"),n.get("/pair_history",{params:_({},r),timeout:5e4}).then(l=>{t("updatePairHistory",{pair:r.pair,timeframe:r.timeframe,timerange:r.timerange,data:l.data}),t("setHistoryStatus","success")}).catch(l=>{console.error(l),t("setHistoryStatus","error")});const o="pair or timeframe or timerange not specified";return console.error(o),new Promise((l,i)=>{i(o)})},async getStrategyPlotConfig({commit:t}){try{const r=await n.get("/plot_config"),o=r.data;return o.subplots===null&&(o.subplots={}),t("updatePlotConfig",r.data),Promise.resolve()}catch(r){return console.error(r),Promise.reject(r)}},setPlotConfigName({commit:t},r){t("updatePlotConfigName",r)},getStrategyList({commit:t}){return n.get("/strategies").then(r=>t("updateStrategyList",r.data)).catch(console.error)},async getStrategy({commit:t},r){try{const o=await n.get(`/strategy/${r}`,{});return t("updateStrategy",o.data),Promise.resolve(o.data)}catch(o){return console.error(o),Promise.reject(o)}},async getAvailablePairs({commit:t},r){try{const o=await n.get("/available_pairs",{params:_({},r)}),{pairs:l}=o.data;return t("updatePairs",l),Promise.resolve(o.data)}catch(o){return console.error(o),Promise.reject(o)}},async getPerformance({commit:t}){try{const r=await n.get("/performance");return t("updatePerformance",r.data),Promise.resolve(r.data)}catch(r){return console.error(r),Promise.reject(r)}},getWhitelist({commit:t}){return n.get("/whitelist").then(r=>(t("updateWhitelist",r.data),Promise.resolve(r.data))).catch(r=>Promise.reject(r))},getBlacklist({commit:t}){return n.get("/blacklist").then(r=>t("updateBlacklist",r.data)).catch(console.error)},getProfit({commit:t}){return n.get("/profit").then(r=>t("updateProfit",r.data)).catch(console.error)},async getBalance({commit:t}){try{const r=await n.get("/balance");return t("updateBalance",r.data)}catch(r){return console.error(r)}},getDaily({commit:t},r={}){const{timescale:o=20}=r;return n.get("/daily",{params:{timescale:o}}).then(l=>t("updateDaily",l.data)).catch(console.error)},getState({commit:t}){return n.get("/show_config").then(r=>t("updateState",r.data)).catch(console.error)},getLogs({commit:t}){return n.get("/logs").then(r=>t("updateLogs",r.data)).catch(console.error)},async startBot({dispatch:t}){try{const r=await n.post("/start",{});return console.log(r.data),p(t,r.data.status),Promise.resolve(r)}catch(r){return v.isAxiosError(r)&&console.error(r.response),p(t,"Error starting bot."),Promise.reject(r)}},async stopBot({dispatch:t}){try{const r=await n.post("/stop",{});return p(t,r.data.status),Promise.resolve(r)}catch(r){return v.isAxiosError(r)&&console.error(r.response),p(t,"Error stopping bot."),Promise.reject(r)}},async stopBuy({dispatch:t}){try{const r=await n.post("/stopbuy",{});return p(t,r.data.status),Promise.resolve(r)}catch(r){return v.isAxiosError(r)&&console.error(r.response),p(t,"Error calling stopbuy."),Promise.reject(r)}},async reloadConfig({dispatch:t}){try{const r=await n.post("/reload_config",{});return console.log(r.data),p(t,r.data.status),Promise.resolve(r)}catch(r){return v.isAxiosError(r)&&console.error(r.response),p(t,"Error reloading."),Promise.reject(r)}},async deleteTrade({dispatch:t},r){try{const o=await n.delete(`/trades/${r}`);return p(t,o.data.result_msg?o.data.result_msg:`Deleted Trade ${r}`),Promise.resolve(o)}catch(o){return v.isAxiosError(o)&&console.error(o.response),p(t,`Failed to delete trade ${r}`,"danger"),Promise.reject(o)}},async startTrade(){try{const t=await n.post("/start_trade",{});return Promise.resolve(t)}catch(t){return Promise.reject(t)}},async forcesell({dispatch:t},r){try{const o=await n.post("/forcesell",r);return p(t,`Sell order for ${r.tradeid} created`),Promise.resolve(o)}catch(o){return v.isAxiosError(o)&&console.error(o.response),p(t,`Failed to create sell order for ${r.tradeid}`,"danger"),Promise.reject(o)}},async forcebuy({dispatch:t},r){var l,i;if(r&&r.pair)try{const u=await n.post("/forcebuy",r);return p(t,`Order for ${r.pair} created.`),Promise.resolve(u)}catch(u){return v.isAxiosError(u)&&(console.error(u.response),p(t,`Error occured entering: '${(i=(l=u.response)==null?void 0:l.data)==null?void 0:i.error}'`,"danger")),Promise.reject(u)}const o="Pair is empty";return console.error(o),Promise.reject(o)},async addBlacklist({commit:t,dispatch:r},o){var i,u;if(console.log(`Adding ${o} to blacklist`),o&&o.blacklist)try{const c=await n.post("/blacklist",o);if(t("updateBlacklist",c.data),c.data.errors&&Object.keys(c.data.errors).length!==0){const{errors:w}=c.data;Object.keys(w).forEach(f=>{p(r,`Error while adding pair ${f} to Blacklist: ${w[f].error_msg}`)})}else p(r,`Pair ${o.blacklist} added.`);return Promise.resolve(c.data)}catch(c){return v.isAxiosError(c)&&(console.error(c.response),p(r,`Error occured while adding pairs to Blacklist: '${(u=(i=c.response)==null?void 0:i.data)==null?void 0:u.error}'`,"danger")),Promise.reject(c)}const l="Pair is empty";return console.error(l),Promise.reject(l)},async deleteBlacklist({commit:t,dispatch:r},o){var i,u;if(console.log(`Deleting ${o} from blacklist.`),o)try{const c=await n.delete("/blacklist",{params:{pairs_to_delete:o},paramsSerializer:w=>Vr(w)});if(t("updateBlacklist",c.data),c.data.errors&&Object.keys(c.data.errors).length!==0){const{errors:w}=c.data;Object.keys(w).forEach(f=>{p(r,`Error while removing pair ${f} from Blacklist: ${w[f].error_msg}`)})}else p(r,`Pair ${o} removed.`);return Promise.resolve(c.data)}catch(c){return v.isAxiosError(c)&&(console.error(c.response),p(r,`Error occured while removing pairs from Blacklist: '${(u=(i=c.response)==null?void 0:i.data)==null?void 0:u.error}'`,"danger")),Promise.reject(c)}const l="Pair is empty";return console.error(l),Promise.reject(l)},async startBacktest({commit:t},r){try{const o=await n.post("/backtest",r);t("updateBacktestRunning",o.data)}catch(o){console.log(o)}},async pollBacktest({commit:t}){const r=await n.get("/backtest");t("updateBacktestRunning",r.data),r.data.running===!1&&r.data.backtest_result&&t("updateBacktestResult",r.data.backtest_result)},async removeBacktest({commit:t}){t("resetBacktestHistory");try{const{data:r}=await n.delete("/backtest");return t("updateBacktestRunning",r),Promise.resolve(r)}catch(r){return Promise.reject(r)}},async stopBacktest({commit:t}){try{const{data:r}=await n.get("/backtest/abort");return t("updateBacktestRunning",r),Promise.resolve(r)}catch(r){return Promise.reject(r)}},setBacktestResultKey({commit:t},r){t("setBacktestResultKey",r)},async sysInfo({commit:t}){try{const{data:r}=await n.get("/sysinfo");return t("updateSysInfo",r),Promise.resolve(r)}catch(r){return Promise.reject(r)}}}}}const Te="ftSelectedBot";var y=(e=>(e.hasBots="hasBots",e.botCount="botCount",e.nextBotId="nextBotId",e.selectedBot="selectedBot",e.selectedBotObj="selectedBotObj",e.globalAutoRefresh="globalAutoRefresh",e.allAvailableBots="allAvailableBots",e.allAvailableBotsList="allAvailableBotsList",e.allTradesAllBots="allTradesAllBots",e.allOpenTradesAllBots="allOpenTradesAllBots",e.allDailyStatsAllBots="allDailyStatsAllBots",e.allIsBotOnline="allIsBotOnline",e.allAutoRefresh="allAutoRefresh",e.allProfit="allProfit",e.allOpenTrades="allOpenTrades",e.allOpenTradeCount="allOpenTradeCount",e.allClosedTrades="allClosedTrades",e.allBotState="allBotState",e.allBalance="allBalance",e))(y||{});const Wr=["isBotOnline","autoRefresh","closedTrades","profit","openTrades","openTradeCount","closedTrades","botState","balance"];function Yr(e){const a={selectedBot:"",availableBots:{},globalAutoRefresh:!0,refreshing:!1,refreshInterval:null,refreshIntervalSlow:null},s={hasBots(r){return Object.keys(r.availableBots).length>0},botCount(r){return Object.keys(r.availableBots).length},nextBotId(r){let o=Object.keys(r.availableBots).length;for(;`ftbot.${o}`in r.availableBots;)o+=1;return`ftbot.${o}`},selectedBot(r){return r.selectedBot},selectedBotObj(r){return r.availableBots[r.selectedBot]},globalAutoRefresh(r){return r.globalAutoRefresh},allAvailableBots(r){return r.availableBots},allAvailableBotsList(r){return Object.keys(r.availableBots)},allTradesAllBots(r,o){let l=[];return o.allAvailableBotsList.forEach(i=>{const u=o[`${i}/${T.trades}`].map(c=>E(_({},c),{botId:i}));l=l.concat(u)}),l},allOpenTradesAllBots(r,o){let l=[];return o.allAvailableBotsList.forEach(i=>{const u=o[`${i}/${T.openTrades}`].map(c=>_({},c));l=l.concat(u)}),l},allDailyStatsAllBots(r,o){const l={};return o.allAvailableBotsList.forEach(u=>{var c,w;(w=(c=o[`${u}/${T.dailyStats}`])==null?void 0:c.data)==null||w.forEach(f=>{l[f.date]?(l[f.date].abs_profit+=f.abs_profit,l[f.date].fiat_value+=f.fiat_value,l[f.date].trade_count+=f.trade_count):l[f.date]=_({},f)})}),{stake_currency:"USDT",fiat_display_currency:"USD",data:Object.values(l)}}};Object.keys(T).forEach(r=>{s[r]=(o,l)=>l[`${o.selectedBot}/${r}`]}),Wr.forEach(r=>{const o=`all${r.charAt(0).toUpperCase()+r.slice(1)}`;console.log("creating getter",r,o),s[o]=(l,i)=>{const u={};return i.allAvailableBotsList.forEach(c=>{u[c]=i[`${c}/${r}`]}),u}});const n={selectBot(r,o){o in r.availableBots?r.selectedBot=o:console.warn(`Botid ${o} not available, but selected.`)},setGlobalAutoRefresh(r,o){r.globalAutoRefresh=o},setRefreshing(r,o){r.refreshing=o},addBot(r,o){r.availableBots[o.botId]=o},removeBot(r,o){o in r.availableBots&&delete r.availableBots[o]},setRefreshInterval(r,o){r.refreshInterval=o},setRefreshIntervalSlow(r,o){r.refreshIntervalSlow=o}},t={addBot({dispatch:r,getters:o,commit:l},i){if(Object.keys(o.allAvailableBots).includes(i.botId)){console.log("Bot already present");return}console.log("add bot",i),e.registerModule([h.ftbot,i.botId],Kr(i.botId,i.botName)),r(`${i.botId}/botAdded`),l("addBot",i)},removeBot({commit:r,getters:o,dispatch:l},i){Object.keys(o.allAvailableBots).includes(i)?(l(`${i}/logout`),e.unregisterModule([h.ftbot,i]),r("removeBot",i)):console.warn(`bot ${i} not found! could not remove`)},selectFirstBot({commit:r,getters:o}){if(o.hasBots){const l=localStorage.getItem(Te),i=Object.keys(o.allAvailableBots)[0];let u=i;l&&(u=Object.keys(o.allAvailableBots).find(c=>c===l)),r("selectBot",o.allAvailableBots[u||i].botId)}},selectBot({commit:r},o){localStorage.setItem(Te,o),r("selectBot",o)},setGlobalAutoRefresh({commit:r},o){r("setGlobalAutoRefresh",o)},allRefreshFrequent({dispatch:r,getters:o},l=!1){o.allAvailableBotsList.forEach(i=>{o[`${i}/${T.refreshNow}`]&&(o.globalAutoRefresh||l)&&r(`${i}/${N.refreshFrequent}`)})},allRefreshSlow({dispatch:r,getters:o},l=!1){o.allAvailableBotsList.forEach(i=>{o[`${i}/${T.refreshNow}`]&&(o.globalAutoRefresh||l)&&r(`${i}/${N.refreshSlow}`,l)})},async allRefreshFull({commit:r,dispatch:o,state:l}){if(!l.refreshing){r("setRefreshing",!0);try{await o("pingAll");const i=[];i.push(o("allRefreshFrequent",!1)),i.push(o("allRefreshSlow",!0)),await Promise.all(i),console.log("refreshing_end")}finally{r("setRefreshing",!1)}}},startRefresh({state:r,dispatch:o,commit:l}){if(console.log("Starting automatic refresh."),o("allRefreshFull"),!r.refreshInterval){const i=window.setInterval(()=>{o("allRefreshFrequent")},5e3);l("setRefreshInterval",i)}if(!r.refreshIntervalSlow){const i=window.setInterval(()=>{o("allRefreshSlow",!1)},6e4);l("setRefreshIntervalSlow",i)}},stopRefresh({state:r,commit:o}){console.log("Stopping automatic refresh."),r.refreshInterval&&(window.clearInterval(r.refreshInterval),o("setRefreshInterval",null)),r.refreshIntervalSlow&&(window.clearInterval(r.refreshIntervalSlow),o("setRefreshIntervalSlow",null))},async pingAll({getters:r,dispatch:o}){await Promise.all(r.allAvailableBotsList.map(async l=>{try{await o(`${l}/ping`)}catch{}}))},allGetState({getters:r,dispatch:o}){r.allAvailableBotsList.forEach(l=>{o(`${l}/getState`)})},allGetDaily({getters:r,dispatch:o},l){r.allAvailableBotsList.forEach(i=>{o(`${i}/getDaily`,l)})},async forceSellMulti({dispatch:r},o){return r(`${o.botId}/${[N.forcesell]}`,o)},async deleteTradeMulti({dispatch:r},o){return r(`${o.botId}/${[N.deleteTrade]}`,o.tradeid)}};return Object.keys(N).forEach(r=>{t[r]=({state:o,dispatch:l,getters:i},...u)=>i.hasBots?l(`${o.selectedBot}/${r}`,...u):(console.warn(`bot ${o.selectedBot} is not registered.`),{})}),{namespaced:!0,state:a,mutations:n,getters:s,actions:t}}var Zr=Object.defineProperty,Xr=Object.getOwnPropertyDescriptor,S=(e,a,s,n)=>{for(var t=n>1?void 0:n?Xr(a,s):a,r=e.length-1,o;r>=0;r--)(o=e[r])&&(t=(n?o(a,s,t):o(t))||t);return n&&t&&Zr(a,s,t),t},Qe,Ge;const ke=window.location.origin||"http://localhost:3000",z=R(h.ftbot);let L=class extends m{constructor(){super(...arguments);this.auth={botName:"",url:ke,username:"",password:""},this.nameState=null,this.pwdState=null,this.urlState=null,this.errorMessage="",this.errorMessageCORS=!1}emitLoginResult(e){return e}checkFormValidity(){const e=this.$refs.form.checkValidity();return this.nameState=e||this.auth.username!=="",this.pwdState=e||this.auth.password!=="",e}resetLogin(){this.auth.url=ke,this.auth.username="",this.auth.password="",this.nameState=null,this.pwdState=null,this.errorMessage=""}handleReset(e){e.preventDefault(),this.resetLogin()}handleOk(e){e.preventDefault(),this.handleSubmit()}handleSubmit(){if(!this.checkFormValidity())return;this.errorMessage="",Ve(this.nextBotId).login(this.auth).then(()=>{const a=this.nextBotId;if(this.addBot({botName:this.auth.botName,botId:a,botUrl:this.auth.url}),this.selectedBot===""&&(console.log(`selecting bot ${a}`),this.selectBot(a)),this.emitLoginResult(!0),this.allRefreshFull(),this.inModal===!1)if(typeof this.$route.query.redirect=="string"){const s=this.$router.resolve({path:this.$route.query.redirect});s.route.name!=="404"?this.$router.push(s.route.path):this.$router.push("/")}else this.$router.push("/")}).catch(a=>{this.errorMessageCORS=!1,console.error(a.response),a.response&&a.response.status===401?(this.nameState=!1,this.pwdState=!1,this.errorMessage="Connected to bot, however Login failed, Username or Password wrong."):(this.urlState=!1,this.errorMessage=`Login failed.
Please verify that the bot is running, the Bot API is enabled and the URL is reachable.
You can verify this by navigating to ${this.auth.url}/api/v1/ping to make sure the bot API is reachable`,this.auth.url!==window.location.origin&&(this.errorMessageCORS=!0)),console.error(this.errorMessage),this.emitLoginResult(!1)})}};Qe=y.nextBotId,Ge=y.selectedBot;S([ce],L.prototype,"setLoggedIn",2);S([z.Getter],L.prototype,Qe,2);S([z.Getter],L.prototype,Ge,2);S([z.Action],L.prototype,"addBot",2);S([z.Action],L.prototype,"selectBot",2);S([z.Action],L.prototype,"allRefreshFull",2);S([V({default:!1})],L.prototype,"inModal",2);S([mr("loginResult")],L.prototype,"emitLoginResult",1);L=S([P({})],L);var et=function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",[s("form",{ref:"form",attrs:{novalidate:""},on:{submit:function(n){return n.stopPropagation(),n.preventDefault(),e.handleSubmit.apply(null,arguments)},reset:e.handleReset}},[s("b-form-group",{attrs:{label:"Bot Name","label-for":"name-input"}},[s("b-form-input",{attrs:{id:"name-input",placeholder:"Bot Name"},nativeOn:{keydown:function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.handleOk.apply(null,arguments)}},model:{value:e.auth.botName,callback:function(n){e.$set(e.auth,"botName",n)},expression:"auth.botName"}})],1),s("b-form-group",{attrs:{state:e.urlState,label:"API Url","label-for":"url-input","invalid-feedback":"API Url required"}},[s("b-form-input",{attrs:{id:"url-input",state:e.urlState,required:""},nativeOn:{keydown:function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.handleOk.apply(null,arguments)}},model:{value:e.auth.url,callback:function(n){e.$set(e.auth,"url",n)},expression:"auth.url"}})],1),s("b-form-group",{attrs:{state:e.nameState,label:"Username","label-for":"username-input","invalid-feedback":"Name and Password are required."}},[s("b-form-input",{attrs:{id:"username-input",required:"",placeholder:"Freqtrader"},nativeOn:{keydown:function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.handleOk.apply(null,arguments)}},model:{value:e.auth.username,callback:function(n){e.$set(e.auth,"username",n)},expression:"auth.username"}})],1),s("b-form-group",{attrs:{label:"Password","label-for":"password-input","invalid-feedback":"Invalid Password",state:e.pwdState}},[s("b-form-input",{attrs:{id:"password-input",required:"",type:"password"},nativeOn:{keydown:function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.handleOk.apply(null,arguments)}},model:{value:e.auth.password,callback:function(n){e.$set(e.auth,"password",n)},expression:"auth.password"}})],1),s("div",[e.errorMessage?s("b-alert",{staticClass:"alert-wrap",attrs:{show:"",variant:"warning"}},[e._v(" "+e._s(e.errorMessage)+" "),s("br"),e.errorMessageCORS?s("span",[e._v(" Please also check your bot's CORS configuration: "),s("a",{attrs:{href:"https://www.freqtrade.io/en/latest/rest-api/#cors"}},[e._v("Freqtrade CORS documentation")])]):e._e()]):e._e()],1),e.inModal===!1?s("div",{staticClass:"float-right"},[s("b-button",{staticClass:"mr-2",attrs:{type:"reset",variant:"danger"}},[e._v("Reset")]),s("b-button",{attrs:{type:"submit",variant:"primary"}},[e._v("Submit")])],1):e._e()],1)])},Qr=[];et._withStripped=!0;const we={};var tt=k(L,et,Qr,!1,Gr,"ef68022e",null,null);function Gr(e){for(let a in we)this[a]=we[a]}tt.options.__file="src/components/Login.vue";var ea=function(){return tt.exports}(),ta=Object.defineProperty,ra=Object.getOwnPropertyDescriptor,rt=(e,a,s,n)=>{for(var t=n>1?void 0:n?ra(a,s):a,r=e.length-1,o;r>=0;r--)(o=e[r])&&(t=(n?o(a,s,t):o(t))||t);return n&&t&&ta(a,s,t),t};let Z=class extends m{resetLogin(){}handleLoginResult(e){e&&this.$refs.modal.hide()}handleOk(e){e.preventDefault(),this.$refs.loginForm.handleSubmit()}};rt([V({required:!1,default:"Login",type:String})],Z.prototype,"loginText",2);Z=rt([P({components:{Login:ea}})],Z);var at=function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",[s("b-button",{directives:[{name:"b-modal",rawName:"v-b-modal.modal-prevent-closing",modifiers:{"modal-prevent-closing":!0}}]},[e._v(e._s(e.loginText))]),s("b-modal",{ref:"modal",attrs:{id:"modal-prevent-closing",title:"Login to your bot"},on:{ok:e.handleOk}},[s("Login",{ref:"loginForm",attrs:{id:"loginForm","in-modal":""},on:{loginResult:e.handleLoginResult}})],1)],1)},aa=[];at._withStripped=!0;const Le={};var st=k(Z,at,aa,!1,sa,"1176847e",null,null);function sa(e){for(let a in Le)this[a]=Le[a]}st.options.__file="src/views/LoginModal.vue";var pe=function(){return st.exports}();const oa="modulepreload",Pe={},na="/",b=function(a,s){return!s||s.length===0?a():Promise.all(s.map(n=>{if(n=`${na}${n}`,n in Pe)return;Pe[n]=!0;const t=n.endsWith(".css"),r=t?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${n}"]${r}`))return;const o=document.createElement("link");if(o.rel=t?"stylesheet":oa,t||(o.as="script",o.crossOrigin=""),o.href=n,document.head.appendChild(o),t)return new Promise((l,i)=>{o.addEventListener("load",l),o.addEventListener("error",()=>i(new Error(`Unable to preload CSS for ${n}`)))})})).then(()=>a())},ot=[{name:"Bootstrap",description:"Plain bootstrap default theme",dark:!1,bootswatch:!1},{name:"Bootstrap_dark",description:"Plain dark bootstrap default theme",dark:!0,bootswatch:!1},{name:"Cerulean",description:"A calm blue sky",dark:!1,bootswatch:!0},{name:"Cosmo",description:"An ode to Metro",dark:!1,bootswatch:!0},{name:"Cyborg",description:"Jet black and electric blue",dark:!0,bootswatch:!0},{name:"Darkly",description:"Flatly in night mode",dark:!0,bootswatch:!0},{name:"Flatly",description:"Flat and modern",dark:!1,bootswatch:!0},{name:"Journal",description:"Crisp like a new sheet of paper",dark:!1,bootswatch:!0},{name:"Litera",description:"The medium is the message",dark:!1,bootswatch:!0},{name:"Lumen",description:"Light and shadow",dark:!1,bootswatch:!0},{name:"Lux",description:"A touch of class",dark:!1,bootswatch:!0},{name:"Materia",description:"Material is the metaphor",dark:!1,bootswatch:!0},{name:"Minty",description:"A fresh feel",dark:!1,bootswatch:!0},{name:"Pulse",description:"A trace of purple",dark:!1,bootswatch:!0},{name:"Sandstone",description:"A touch of warmth",dark:!1,bootswatch:!0},{name:"Simplex",description:"Mini and minimalist",dark:!1,bootswatch:!0},{name:"Sketchy",description:"A hand-drawn look for mockups and mirth",dark:!1,bootswatch:!0},{name:"Slate",description:"Shades of gunmetal gray",dark:!0,bootswatch:!0},{name:"Solar",description:"A spin on Solarized",dark:!0,bootswatch:!0},{name:"Spacelab",description:"Silvery and sleek",dark:!1,bootswatch:!0},{name:"Superhero",description:"The brave and the blue",dark:!0,bootswatch:!0},{name:"United",description:"Ubuntu orange and unique font",dark:!1,bootswatch:!0},{name:"Yeti",description:"A friendly foundation",dark:!1,bootswatch:!0}];function la(e){window.localStorage.theme=e}function ia(e){if(e!==void 0)return ot.find(a=>a.name.toLowerCase()===e.toLowerCase())}function ca(){const{theme:e}=window.localStorage;return e}var ua=m.extend({name:"BootswatchThemeSelect",components:{ThemeLightDark:_r},props:{simple:{type:Boolean,default:!0}},data(){return{activeTheme:"",themeList:ot}},mounted(){window.localStorage.theme&&this.setTheme(window.localStorage.theme)},methods:E(_({},vr(["setCurrentTheme"])),{handleClick(e){this.setTheme(e.target.name.trim())},toggleNight(){this.setTheme(this.activeTheme==="bootstrap"?"bootstrap_dark":"bootstrap")},setTheme(e){if(this.activeTheme!==e){if(e.toLowerCase()==="bootstrap"||e.toLowerCase()==="bootstrap_dark"){const a=document.getElementsByTagName("style"),s=Array.from(a).filter(n=>{var t;return(t=n.textContent)==null?void 0:t.includes("bootswatch")});document.documentElement.setAttribute("data-theme",e.toLowerCase()==="bootstrap"?"light":"dark"),s.forEach((n,t)=>{s[t].disabled=!0}),this.simple&&this.activeTheme&&(document.documentElement.classList.add("ft-theme-transition"),window.setTimeout(()=>{document.documentElement.classList.remove("ft-theme-transition")},1e3))}else b(()=>import(`bootswatch/dist/${e.toLowerCase()}/bootstrap.min.css`),[]).then(a=>{console.log("theme",a),document.documentElement.removeAttribute("data-theme");const s=document.getElementsByTagName("style"),n=Array.from(s).filter(t=>{var r;return(r=t.textContent)==null?void 0:r.includes("bootswatch")});n.forEach((t,r)=>{t.id?t.id===e?n[r].disabled=!1:n[r].disabled=!0:n[r].id=e})});this.setCurrentTheme(e),this.activeTheme=e}},fetchApi(){v.get("https://bootswatch.com/api/4.json").catch(e=>{console.error(e)})}})}),nt=function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",[e.simple?s("b-link",{staticClass:"nav-link",attrs:{variant:"outline-primary"},on:{click:e.toggleNight}},[s("ThemeLightDark",{attrs:{size:16}})],1):s("b-nav-item-dropdown",{attrs:{id:"my-nav-dropdown",text:"Theme","toggle-class":"nav-link-custom",right:"",lazy:""}},[e.themeList.length===0?s("b-dropdown-item",[s("b-spinner",{attrs:{small:""}}),e._v(" Loading Themes... ")],1):e._e(),e._l(e.themeList,function(n,t){return s("b-dropdown-item-button",{directives:[{name:"b-tooltip",rawName:"v-b-tooltip.hover.right",modifiers:{hover:!0,right:!0}}],key:t,attrs:{active:e.activeTheme===n.name,title:n.description,name:n.name},on:{click:e.handleClick}},[e._v(e._s(n.name)+e._s(n.dark?" [dark]":""))])})],2)],1)},da=[];nt._withStripped=!0;const $e={};var lt=k(ua,nt,da,!1,fa,"dc631bd2",null,null);function fa(e){for(let a in $e)this[a]=$e[a]}lt.options.__file="src/components/BootswatchThemeSelect.vue";var pa=function(){return lt.exports}(),ha=(e=>(e.multiPane="g-multiPane",e.openTrades="g-openTrades",e.tradeHistory="g-tradeHistory",e.tradeDetail="g-tradeDetail",e))(ha||{}),ga=(e=>(e.dailyChart="g-dailyChart",e.botComparison="g-botComparison",e.allOpenTrades="g-allOpenTrades",e.cumChartChart="g-cumChartChart",e.tradesLogChart="g-TradesLogChart",e))(ga||{}),it=(e=>(e.getDashboardLayoutSm="getDashboardLayoutSm",e.getDashboardLayout="getDashboardLayout",e.getTradingLayoutSm="getTradingLayoutSm",e.getTradingLayout="getTradingLayout",e.getLayoutLocked="getLayoutLocked",e.getPerLayoutSm="getPerLayoutSm",e.getPerLayout="getPerLayout",e))(it||{}),W=(e=>(e.setDashboardLayout="setDashboardLayout",e.setTradingLayout="setTradingLayout",e.setPerLayout="setPerLayout",e.resetDashboardLayout="resetDashboardLayout",e.resetTradingLayout="resetTradingLayout",e.setLayoutLocked="setLayoutLocked",e))(W||{});const Ce=[{i:"g-multiPane",x:0,y:0,w:3,h:35},{i:"g-tradeDetail",x:3,y:5,w:9,h:6},{i:"g-openTrades",x:3,y:0,w:9,h:5},{i:"g-tradeHistory",x:3,y:10,w:9,h:10}],ma=[{i:"g-multiPane",x:0,y:0,w:12,h:10},{i:"g-tradeDetail",x:0,y:19,w:12,h:0},{i:"g-openTrades",x:0,y:8,w:12,h:0},{i:"g-tradeHistory",x:0,y:25,w:12,h:0}],_a=[{i:"g-multiPane",x:0,y:0,w:3,h:35},{i:"g-tradeDetail",x:3,y:5,w:9,h:6},{i:"g-openTrades",x:3,y:0,w:9,h:5},{i:"g-tradeHistory",x:3,y:10,w:9,h:10}],va=[{i:"g-multiPane",x:0,y:0,w:12,h:10},{i:"g-tradeDetail",x:0,y:19,w:12,h:0},{i:"g-openTrades",x:0,y:8,w:12,h:0},{i:"g-tradeHistory",x:0,y:25,w:12,h:0}],Re=[{i:"g-botComparison",x:0,y:0,w:8,h:6},{i:"g-dailyChart",x:8,y:0,w:4,h:6},{i:"g-allOpenTrades",x:0,y:6,w:8,h:6},{i:"g-cumChartChart",x:8,y:6,w:4,h:6},{i:"g-TradesLogChart",x:0,y:12,w:12,h:4}],ya=[{i:"g-botComparison",x:0,y:0,w:12,h:6},{i:"g-allOpenTrades",x:0,y:6,w:12,h:8},{i:"g-dailyChart",x:0,y:14,w:12,h:6},{i:"g-cumChartChart",x:0,y:20,w:12,h:6},{i:"g-TradesLogChart",x:0,y:26,w:12,h:4}],Oe="ftDashboardLayout",Ie="ftTradingLayout",ct="ftLayoutLocked",Ae="ftPerLayout";function ba(){const e=localStorage.getItem(ct);return e?JSON.parse(e):!0}function oe(e,a){const s=localStorage.getItem(e);return s?JSON.parse(s):JSON.parse(JSON.stringify(a))}function Ss(e,a){let s=e.find(n=>n.i===a);return s||(s={i:a,x:0,y:0,w:4,h:6}),s}var Ta={namespaced:!0,state:{dashboardLayout:oe(Oe,Re),tradingLayout:oe(Ie,Ce),layoutLocked:ba(),perLayout:oe(Ae,_a)},getters:{getDashboardLayoutSm(){return[...ya]},getDashboardLayout(e){return e.dashboardLayout},getTradingLayoutSm(){return[...ma]},getTradingLayout(e){return e.tradingLayout},getLayoutLocked(e){return e.layoutLocked},getPerLayoutSm(){return[...va]},getPerLayout(e){return e.perLayout}},mutations:{setDashboardLayout(e,a){e.dashboardLayout=a,localStorage.setItem(Oe,JSON.stringify(a))},setTradingLayout(e,a){e.tradingLayout=a,localStorage.setItem(Ie,JSON.stringify(a))},setLayoutLocked(e,a){e.layoutLocked=a,localStorage.setItem(ct,JSON.stringify(a))},setPerLayout(e,a){e.tradingLayout=a,localStorage.setItem(Ae,JSON.stringify(a))}},actions:{setDashboardLayout({commit:e},a){e("setDashboardLayout",a)},setTradingLayout({commit:e},a){e("setTradingLayout",a)},setPerLayout({commit:e},a){e("setPerLayout",a)},setLayoutLocked({commit:e},a){e("setLayoutLocked",a)},resetDashboardLayout({commit:e}){e("setDashboardLayout",JSON.parse(JSON.stringify(Re)))},resetTradingLayout({commit:e}){e("setTradingLayout",JSON.parse(JSON.stringify(Ce)))}}};function ut(e){return e==null}function Es(e,a=3){return ut(e)?"":`${(e*100).toFixed(a)}%`}function ka(e,a=8){return ut(e)?"":parseFloat(e.toFixed(a)).toString()}function Bs(e,a,s=3){return`${ka(e,s)} ${a}`}function Ds(e,a){return yr(e,a,0)}let he="UTC";function dt(e){he=e}function ft(e){return e||he}function ge(e,a){const s=Tr(e),n=Intl.DateTimeFormat().resolvedOptions().timeZone;return ft(a)==="UTC"?G.utcToZonedTime(s,n):s}function xs(e){return G.format(ge(e),"yyyy-MM-dd HH:mm:ss",{timeZone:he})}function Ns(e,a){return G.format(ge(e,a),"yyyy-MM-dd HH:mm:ss (z)",{timeZone:ft(a)})}function js(e){return G.format(ge(e),"yyyy-MM-dd")}function Fs(e){return e.replace(/-/g,"")}function Us(e){return br(e*1e3)}const pt="ftUISettings";var Y=(e=>(e.showPill="showPill",e.asTitle="asTitle",e.noOpenTrades="noOpenTrades",e))(Y||{}),ee=(e=>(e.openTradesInTitle="openTradesInTitle",e.timezone="timezone",e.backgroundSync="backgroundSync",e))(ee||{}),wa=(e=>(e.setOpenTradesInTitle="setOpenTradesInTitle",e.setTimeZone="setTimeZone",e.setBackgroundSync="setBackgroundSync",e))(wa||{});function ht(){const e=localStorage.getItem(pt);return e?JSON.parse(e):{}}const q=ht();function ne(e,a){const s=ht()||{};s[e]=a,localStorage.setItem(pt,JSON.stringify(s))}const La={openTradesInTitle:(q==null?void 0:q.openTradesInTitle)||"showPill",timezone:q.timezone||"UTC",backgroundSync:q.backgroundSync||!0};var Pa={namespaced:!0,state:La,getters:{openTradesInTitle(e){return e.openTradesInTitle},timezone(e){return e.timezone},backgroundSync(e){return e.backgroundSync}},mutations:{setOpenTrades(e,a){e.openTradesInTitle=a,ne("openTradesInTitle",a)},setTimeZone(e,a){e.timezone=a,ne("timezone",a)},setBackgroundSync(e,a){e.backgroundSync=a,ne("backgroundSync",a)}},actions:{setOpenTradesInTitle({commit:e},a){e("setOpenTrades",a)},setTimeZone({commit:e},a){dt(a),e("setTimeZone",a)},setBackgroundSync({commit:e},a){e("setBackgroundSync",a)}}},$a=Object.defineProperty,Ca=Object.getOwnPropertyDescriptor,te=(e,a,s,n)=>{for(var t=n>1?void 0:n?Ca(a,s):a,r=e.length-1,o;r>=0;r--)(o=e[r])&&(t=(n?o(a,s,t):o(t))||t);return n&&t&&$a(a,s,t),t},gt;const me=R(h.ftbot);let j=class extends m{constructor(){super(...arguments);this.refreshInterval=null,this.refreshIntervalSlow=null}get autoRefreshLoc(){return this.globalAutoRefresh}set autoRefreshLoc(e){this.setGlobalAutoRefresh(e)}};gt=y.globalAutoRefresh;te([me.Getter],j.prototype,gt,2);te([me.Action],j.prototype,"setGlobalAutoRefresh",2);te([me.Action],j.prototype,"allRefreshFull",2);j=te([P({components:{RefreshIcon:kr}})],j);var mt=function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"d-flex flex-align-center ml-2"},[s("b-form-checkbox",{staticClass:"ml-auto float-right my-auto",attrs:{title:"AutoRefresh"},model:{value:e.autoRefreshLoc,callback:function(n){e.autoRefreshLoc=n},expression:"autoRefreshLoc"}}),s("b-button",{staticClass:"m-1",attrs:{variant:"secondary",size:"sm",title:"Auto Refresh All bots"},on:{click:e.allRefreshFull}},[s("RefreshIcon",{attrs:{size:16}})],1)],1)},Ra=[];mt._withStripped=!0;const Se={};var _t=k(j,mt,Ra,!1,Oa,"657ee72e",null,null);function Oa(e){for(let a in Se)this[a]=Se[a]}_t.options.__file="src/components/ftbot/ReloadControl.vue";var Ia=function(){return _t.exports}(),Aa=Object.defineProperty,Sa=Object.getOwnPropertyDescriptor,D=(e,a,s,n)=>{for(var t=n>1?void 0:n?Sa(a,s):a,r=e.length-1,o;r>=0;r--)(o=e[r])&&(t=(n?o(a,s,t):o(t))||t);return n&&t&&Aa(a,s,t),t},vt,yt,bt;const J=R(h.ftbot);let C=class extends m{get autoRefreshLoc(){return this.allAutoRefresh[this.bot.botId]}set autoRefreshLoc(e){}changeEvent(e){this.$store.dispatch(`ftbot/${this.bot.botId}/setAutoRefresh`,e)}clickRemoveBot(e){this.$bvModal.msgBoxConfirm(`Really remove (logout) from '${e.botName}' (${e.botId})?`).then(a=>{a&&this.removeBot(e.botId)})}};vt=y.allIsBotOnline,yt=y.allAutoRefresh,bt=y.allAvailableBots;D([V({default:!1,type:Object})],C.prototype,"bot",2);D([V({default:!1,type:Boolean})],C.prototype,"noButtons",2);D([J.Getter],C.prototype,vt,2);D([J.Getter],C.prototype,yt,2);D([J.Getter],C.prototype,bt,2);D([J.Action],C.prototype,"removeBot",2);D([J.Action],C.prototype,"selectBot",2);C=D([P({components:{LoginModal:pe,DeleteIcon:wr,EditIcon:Lr}})],C);var Tt=function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"d-flex align-items-center justify-content-between w-100"},[s("span",{staticClass:"mr-2"},[e._v(e._s(e.bot.botName||e.bot.botId))]),s("div",{staticClass:"align-items-center d-flex"},[s("span",{staticClass:"ml-2 mr-1 align-middle"},[e._v(e._s(e.allIsBotOnline[e.bot.botId]?"\u{1F7E2}":"\u{1F534}"))]),s("b-form-checkbox",{staticClass:"ml-auto float-right mr-2 my-auto",attrs:{title:"AutoRefresh",variant:"secondary"},on:{change:e.changeEvent},model:{value:e.autoRefreshLoc,callback:function(n){e.autoRefreshLoc=n},expression:"autoRefreshLoc"}},[e._v(" R ")]),e.noButtons?e._e():s("div",{staticClass:"d-flex flex-align-cent"},[s("b-button",{staticClass:"ml-1",attrs:{size:"sm",title:"Delete bot"},on:{click:function(n){return n.preventDefault(),e.clickRemoveBot(e.bot)}}},[s("DeleteIcon",{attrs:{size:16,title:"Delete Bot"}})],1)],1)],1)])},Ea=[];Tt._withStripped=!0;const Ee={};var kt=k(C,Tt,Ea,!1,Ba,"95bc5cca",null,null);function Ba(e){for(let a in Ee)this[a]=Ee[a]}kt.options.__file="src/components/BotEntry.vue";var wt=function(){return kt.exports}(),Da=Object.defineProperty,xa=Object.getOwnPropertyDescriptor,x=(e,a,s,n)=>{for(var t=n>1?void 0:n?xa(a,s):a,r=e.length-1,o;r>=0;r--)(o=e[r])&&(t=(n?o(a,s,t):o(t))||t);return n&&t&&Da(a,s,t),t},Lt,Pt,$t,Ct;const K=R(h.ftbot);let A=class extends m{};Lt=y.botCount,Pt=y.selectedBot,$t=y.allIsBotOnline,Ct=y.allAvailableBots;x([V({default:!1,type:Boolean})],A.prototype,"small",2);x([K.Getter],A.prototype,Lt,2);x([K.Getter],A.prototype,Pt,2);x([K.Getter],A.prototype,$t,2);x([K.Getter],A.prototype,Ct,2);x([K.Action],A.prototype,"selectBot",2);A=x([P({components:{LoginModal:pe,BotEntry:wt}})],A);var Rt=function(){var e=this,a=e.$createElement,s=e._self._c||a;return e.botCount>0?s("div",[e.small?e._e():s("h3",{staticStyle:{color:"red"}},[e._v("Let's start Trading!!!")]),s("b-list-group",e._l(e.allAvailableBots,function(n){return s("b-list-group-item",{key:n.botId,attrs:{active:n.botId===e.selectedBot,button:"",title:n.botId+" - "+n.botName+" - "+n.botUrl},on:{click:function(t){return e.selectBot(n.botId)}}},[s("bot-entry",{attrs:{bot:n,"no-buttons":e.small}})],1)}),1),e.small?e._e():s("LoginModal",{staticClass:"mt-2",attrs:{"login-text":"Add new bot"}})],1):e._e()},Na=[];Rt._withStripped=!0;const Be={};var Ot=k(A,Rt,Na,!1,ja,"04538e85",null,null);function ja(e){for(let a in Be)this[a]=Be[a]}Ot.options.__file="src/components/BotList.vue";var It=function(){return Ot.exports}(),Fa=Object.defineProperty,Ua=Object.getOwnPropertyDescriptor,g=(e,a,s,n)=>{for(var t=n>1?void 0:n?Ua(a,s):a,r=e.length-1,o;r>=0;r--)(o=e[r])&&(t=(n?o(a,s,t):o(t))||t);return n&&t&&Fa(a,s,t),t},At,St,Et,Bt,Dt,xt,Nt,jt,Ft,Ut,qt,Ht;const O=R(h.ftbot),re=R(h.layout),qa=R(h.uiSettings);let d=class extends m{constructor(){super(...arguments);this.pingInterval=null,this.botSelectOpen=!1,this.favicon=void 0}mounted(){this.pingAll(),this.loadUIVersion(),this.pingInterval=window.setInterval(this.pingAll,6e4),this.hasBots&&this.allGetState()}beforeDestroy(){this.pingInterval&&clearInterval(this.pingInterval)}clickLogout(){this.logout(),this.setLoggedIn(!1)}get layoutLockedLocal(){return this.getLayoutLocked}set layoutLockedLocal(e){this.setLayoutLocked(e)}setOpenTradesAsPill(e){this.favicon||(this.favicon=new $r({animation:"none"})),e!==0&&this.openTradesInTitle==="showPill"?this.favicon.badge(e):(this.favicon.reset(),console.log("reset"))}resetDynamicLayout(){const e=this.$router.currentRoute.path;switch(console.log(`resetLayout called for ${e}`),e){case"/trade":this.resetTradingLayout();break;case"/dashboard":this.resetDashboardLayout();break}}setTitle(){let e="TUK Test UI";this.openTradesInTitle===Y.asTitle&&(e=`(${this.openTradeCount}) ${e}`),this.botName&&(e=`${e} - ${this.botName}`),document.title=e}botnameChanged(){this.setTitle()}openTradeCountChanged(){console.log("openTradeCount changed"),this.openTradesInTitle===Y.showPill?this.setOpenTradesAsPill(this.openTradeCount):this.openTradesInTitle===Y.asTitle&&this.setTitle()}openTradesSettingChanged(){this.setTitle(),this.setOpenTradesAsPill(this.openTradeCount)}};At=T.isBotOnline,St=y.hasBots,Et=y.botCount,Bt=T.botName,Dt=T.openTradeCount,xt=T.canRunBacktest,Nt=y.selectedBotObj,jt=it.getLayoutLocked,Ft=W.resetDashboardLayout,Ut=W.resetTradingLayout,qt=W.setLayoutLocked,Ht=ee.openTradesInTitle;g([ce],d.prototype,"setLoggedIn",2);g([ce],d.prototype,"loadUIVersion",2);g([Pr],d.prototype,"getUiVersion",2);g([O.Action],d.prototype,"pingAll",2);g([O.Action],d.prototype,"allGetState",2);g([O.Action],d.prototype,"logout",2);g([O.Getter],d.prototype,At,2);g([O.Getter],d.prototype,St,2);g([O.Getter],d.prototype,Et,2);g([O.Getter],d.prototype,Bt,2);g([O.Getter],d.prototype,Dt,2);g([O.Getter],d.prototype,xt,2);g([O.Getter],d.prototype,Nt,2);g([re.Getter],d.prototype,jt,2);g([re.Action],d.prototype,Ft,2);g([re.Action],d.prototype,Ut,2);g([re.Action],d.prototype,qt,2);g([qa.Getter],d.prototype,Ht,2);g([ue(T.botName)],d.prototype,"botnameChanged",1);g([ue(T.openTradeCount)],d.prototype,"openTradeCountChanged",1);g([ue(ee.openTradesInTitle)],d.prototype,"openTradesSettingChanged",1);d=g([P({components:{LoginModal:pe,BootswatchThemeSelect:pa,ReloadControl:Ia,BotEntry:wt,BotList:It}})],d);var Mt=function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("header",[s("b-navbar",{attrs:{toggleable:"sm",type:"dark",variant:"primary"}},[s("router-link",{staticClass:"navbar-brand",attrs:{exact:"",to:"/"}},[s("span",{staticClass:"navbar-brand-title d-sm-none d-md-inline",staticStyle:{"font-size":"35px"}},[e._v("START")])]),s("b-navbar-toggle",{attrs:{target:"nav-collapse"}}),s("b-collapse",{staticClass:"text-right text-md-center",attrs:{id:"nav-collapse","is-nav":""}},[s("b-navbar-nav",[e.canRunBacktest?e._e():s("router-link",{staticClass:"nav-link navbar-nav",staticStyle:{"font-size":"35px"},attrs:{to:"/trade"}},[e._v("Trading")]),e.canRunBacktest?e._e():s("router-link",{staticClass:"nav-link navbar-nav",staticStyle:{"font-size":"35px"},attrs:{to:"/dashboard"}},[e._v("Dashboard")]),s("router-link",{staticClass:"nav-link navbar-nav",staticStyle:{"font-size":"35px"},attrs:{to:"/graph"}},[e._v("Charts")]),e.canRunBacktest?s("router-link",{staticClass:"nav-link navbar-nav",attrs:{to:"/backtest"}},[e._v("Backtest")]):e._e(),e.canRunBacktest?e._e():s("router-link",{staticClass:"nav-link navbar-nav",staticStyle:{"font-size":"35px"},attrs:{to:"/Per"}},[e._v("Performance")])],1),s("b-navbar-nav",{staticClass:"ml-auto",attrs:{"menu-class":"w-100"}},[e.hasBots?s("li",{staticClass:"nav-item"},[s("b-nav-item-dropdown",{staticClass:"d-none d-sm-block",attrs:{right:""},scopedSlots:e._u([{key:"button-content",fn:function(){return[s("b-avatar",{attrs:{size:"2em",button:""}},[e._v("FT")])]},proxy:!0}],null,!1,1928966151)},[e.botCount===1?s("router-link",{staticClass:"dropdown-item",attrs:{to:"/"},nativeOn:{click:function(n){return e.clickLogout()}}},[e._v("Sign Out")]):e._e()],1),s("div",{staticClass:"d-block d-sm-none"},[s("li",{staticClass:"nav-item text-secondary ml-2 d-sm-none d-flex justify-content-between"},[s("div",{staticClass:"d-flex"},[s("b-nav-text",{staticClass:"verticalCenter small mr-2"},[e._v(" "+e._s(e.botName||"No bot selected")+" ")]),s("b-nav-text",{staticClass:"verticalCenter"},[e._v(" "+e._s(e.isBotOnline?"Online":"Offline")+" ")])],1)]),e.botCount===1?s("router-link",{staticClass:"nav-link navbar-nav",attrs:{to:"/"},nativeOn:{click:function(n){return e.clickLogout()}}},[e._v("Sign Out")]):e._e()],1)],1):s("li",[s("LoginModal")],1)])],1)],1)],1)},Ha=[];Mt._withStripped=!0;const De={};var Vt=k(d,Mt,Ha,!1,Ma,"3f1ae435",null,null);function Ma(e){for(let a in De)this[a]=De[a]}Vt.options.__file="src/components/layout/NavBar.vue";var Va=function(){return Vt.exports}(),za=Object.defineProperty,Ja=Object.getOwnPropertyDescriptor,zt=(e,a,s,n)=>{for(var t=n>1?void 0:n?Ja(a,s):a,r=e.length-1,o;r>=0;r--)(o=e[r])&&(t=(n?o(a,s,t):o(t))||t);return n&&t&&za(a,s,t),t},Jt;const Ka=R("ftbot");let X=class extends m{};Jt=T.canRunBacktest;zt([Ka.Getter],X.prototype,Jt,2);X=zt([P({components:{OpenTradesIcon:Cr,ClosedTradesIcon:Rr,BalanceIcon:Or,PairListIcon:Ir,DashboardIcon:Ar}})],X);var Kt=function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("footer",{staticClass:"d-md-none"},[s("hr",{staticClass:"my-0"}),s("div",{staticClass:"d-flex flex-align-center justify-content-center"},[e.canRunBacktest?e._e():s("router-link",{staticClass:"nav-link navbar-nav",attrs:{to:"/open_trades"}},[s("OpenTradesIcon"),e._v(" Trades ")],1),e.canRunBacktest?e._e():s("router-link",{staticClass:"nav-link navbar-nav",attrs:{to:"/trade_history"}},[s("ClosedTradesIcon"),e._v(" History ")],1),e.canRunBacktest?e._e():s("router-link",{staticClass:"nav-link navbar-nav",attrs:{to:"/pairlist"}},[s("PairListIcon"),e._v(" Pairlist ")],1),e.canRunBacktest?e._e():s("router-link",{staticClass:"nav-link navbar-nav",attrs:{to:"/balance"}},[s("BalanceIcon"),e._v(" Balance ")],1),e.canRunBacktest?e._e():s("router-link",{staticClass:"nav-link navbar-nav",attrs:{to:"/dashboard"}},[s("DashboardIcon"),e._v(" Dashboard ")],1)],1)])},Wa=[];Kt._withStripped=!0;const xe={};var Wt=k(X,Kt,Wa,!1,Ya,"ad59512e",null,null);function Ya(e){for(let a in xe)this[a]=xe[a]}Wt.options.__file="src/components/layout/NavFooter.vue";var Za=function(){return Wt.exports}(),Xa=Object.defineProperty,Qa=Object.getOwnPropertyDescriptor,_e=(e,a,s,n)=>{for(var t=n>1?void 0:n?Qa(a,s):a,r=e.length-1,o;r>=0;r--)(o=e[r])&&(t=(n?o(a,s,t):o(t))||t);return n&&t&&Xa(a,s,t),t},Yt;const Zt=R(h.alerts);let M=class extends m{closeAlert(){this[fe.removeAlert]()}};Yt=fe.removeAlert;_e([Zt.State],M.prototype,"activeMessages",2);_e([Zt.Action],M.prototype,Yt,2);M=_e([P({})],M);var Xt=function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"bot-alerts"},e._l(e.activeMessages,function(n,t){return s("b-alert",{key:t,attrs:{variant:"warning",dismissible:"",show:5,value:!!n.message},on:{dismissed:e.closeAlert}},[e._v(" "+e._s(n.message)+" ")])}),1)},Ga=[];Xt._withStripped=!0;const Ne={};var Qt=k(M,Xt,Ga,!1,es,null,null,null);function es(e){for(let a in Ne)this[a]=Ne[a]}Qt.options.__file="src/components/ftbot/BotAlerts.vue";var ts=function(){return Qt.exports}(),rs=Object.defineProperty,as=Object.getOwnPropertyDescriptor,ss=(e,a,s,n)=>{for(var t=n>1?void 0:n?as(a,s):a,r=e.length-1,o;r>=0;r--)(o=e[r])&&(t=(n?o(a,s,t):o(t))||t);return n&&t&&rs(a,s,t),t};let le=class extends m{};le=ss([P({components:{BotAlerts:ts}})],le);var Gt=function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("main",[s("BotAlerts"),s("router-view")],1)},os=[];Gt._withStripped=!0;const je={};var er=k(le,Gt,os,!1,ns,"1cefd827",null,null);function ns(e){for(let a in je)this[a]=je[a]}er.options.__file="src/components/layout/Body.vue";var ls=function(){return er.exports}(),is=Object.defineProperty,cs=Object.getOwnPropertyDescriptor,tr=(e,a,s,n)=>{for(var t=n>1?void 0:n?cs(a,s):a,r=e.length-1,o;r>=0;r--)(o=e[r])&&(t=(n?o(a,s,t):o(t))||t);return n&&t&&is(a,s,t),t},rr;const us=R(h.uiSettings);let Q=class extends m{mounted(){dt(this.timezone)}};rr=ee.timezone;tr([us.Getter],Q.prototype,rr,2);Q=tr([P({components:{NavBar:Va,Body:ls,NavFooter:Za}})],Q);var ar=function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"d-flex flex-column vh-100",attrs:{id:"app"}},[s("NavBar"),s("Body",{staticClass:"flex-fill overflow-auto"}),s("NavFooter")],1)},ds=[];ar._withStripped=!0;const Fe={};var sr=k(Q,ar,ds,!1,fs,"7ba5bd90",null,null);function fs(e){for(let a in Fe)this[a]=Fe[a]}sr.options.__file="src/App.vue";var ps=function(){return sr.exports}(),hs=Object.defineProperty,gs=Object.getOwnPropertyDescriptor,ms=(e,a,s,n)=>{for(var t=n>1?void 0:n?gs(a,s):a,r=e.length-1,o;r>=0;r--)(o=e[r])&&(t=(n?o(a,s,t):o(t))||t);return n&&t&&hs(a,s,t),t};let ie=class extends m{};ie=ms([P({components:{BotList:It}})],ie);var _s="/assets/Robot.5915a574.png",or=function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"home"},[s("div",{staticClass:"container col-12 col-sm-6 col-lg-4"},[s("bot-list")],1),s("hr"),s("img",{staticClass:"my-5",attrs:{alt:"Freqtrade logo",src:_s,width:"450px"}}),e._m(0),s("div",{staticStyle:{color:"red"}},[e._v("This page allows you to control your trading bot.")]),s("br"),e._m(1),e._m(2)])},vs=[function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",[s("h1",{staticStyle:{color:"red"}},[e._v("TuKorea Crypto currency trading bot")])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("p",{staticStyle:{color:"red"}},[e._v(" If you need any help, please visit our github. "),s("a",{attrs:{href:"https://github.com/Fractal-crypto"}},[e._v("Github")]),e._v(". ")])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("p",{staticStyle:{color:"red"}},[e._v("Have fun - "),s("i",[e._v("wishes you the Tukorea")])])}];or._withStripped=!0;const Ue={};var nr=k(ie,or,vs,!1,ys,"fae5bece",null,null);function ys(e){for(let a in Ue)this[a]=Ue[a]}nr.options.__file="src/views/Home.vue";var bs=function(){return nr.exports}(),Ts=m.extend({}),lr=function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",[s("h1",{staticClass:"mb-5"},[e._v("404 Error.")]),s("p",{staticClass:"h4"},[e._v("Ahhhhhhhh! The page you are looking for does not exist.")]),s("p",[e._v(" Don't worry, you can head back to "),s("router-link",{attrs:{to:"/"}},[s("span",[e._v("the main page")])]),e._v(". ")],1)])},ks=[];lr._withStripped=!0;const qe={};var ir=k(Ts,lr,ks,!1,ws,"198f572c",null,null);function ws(e){for(let a in qe)this[a]=qe[a]}ir.options.__file="src/views/Error404.vue";var Ls=function(){return ir.exports}();const Ps={apiKey:"AIzaSyClP5ZbPjlS_lhhiVrXY3Nqw7RS40EeA64",authDomain:"new-trading-24f28.firebaseapp.com",projectId:"new-trading-24f28",storageBucket:"new-trading-24f28.appspot.com",messagingSenderId:"59914060519",appId:"1:59914060519:web:2459c52510ef3f5ac45842",measurementId:"G-66LQ2W7R0E"},$s=Sr(Ps),B=Er($s);m.use(He);const Cs=[{path:"/",name:"Home",component:bs,meta:{requiresAuth:!0,allowAnonymous:!0}},{path:"/trade",name:"Freqtrade Trading",component:()=>b(()=>import("./Trading.9f2d02cc.js"),["assets/Trading.9f2d02cc.js","assets/Graphs.342eaf90.css","assets/vendor.4be520cf.js","assets/DraggableContainer.cce84be9.js","assets/DraggableContainer.9aded1fe.css","assets/install.4ca6e0c9.js","assets/install.d2933d0c.js","assets/Balance.9e953b01.js","assets/Balance.40b00372.css","assets/createSeriesDataSimply.6cdf1b95.js","assets/Performance.e20b11f3.js","assets/GestureTap.1e432692.js","assets/GestureTap.62cd18f2.css","assets/CandleChartContainer.1f5607a6.js","assets/CandleChartContainer.f132b8a6.css","assets/FTBotAPIPairList.489f00dd.js","assets/FTBotAPIPairList.8c031c21.css","assets/PairSummary.db39523a.js","assets/PairSummary.577955e3.css","assets/TradeDetail.5acb8285.js","assets/TradeDetail.8003c29f.css","assets/ValuePair.422b28cf.js","assets/TradeList.7dbd6e10.js","assets/TradeList.352ea293.css"])},{path:"/login2",name:"Login2",component:()=>b(()=>import("./Logintest.e0796876.js"),["assets/Logintest.e0796876.js","assets/Logintest.1d534737.css","assets/vendor.4be520cf.js"])},{path:"/per",name:"Freqtrade Per",component:()=>b(()=>import("./Per.e88f71c6.js"),["assets/Per.e88f71c6.js","assets/Graphs.342eaf90.css","assets/vendor.4be520cf.js","assets/DraggableContainer.cce84be9.js","assets/DraggableContainer.9aded1fe.css","assets/install.4ca6e0c9.js","assets/install.d2933d0c.js","assets/Balance.9e953b01.js","assets/Balance.40b00372.css","assets/createSeriesDataSimply.6cdf1b95.js","assets/Performance.e20b11f3.js","assets/GestureTap.1e432692.js","assets/GestureTap.62cd18f2.css","assets/CandleChartContainer.1f5607a6.js","assets/CandleChartContainer.f132b8a6.css","assets/FTBotAPIPairList.489f00dd.js","assets/FTBotAPIPairList.8c031c21.css","assets/PairSummary.db39523a.js","assets/PairSummary.577955e3.css","assets/TradeDetail.5acb8285.js","assets/TradeDetail.8003c29f.css","assets/ValuePair.422b28cf.js","assets/TradeList.7dbd6e10.js","assets/TradeList.352ea293.css"])},{path:"/graph",name:"Freqtrade Graph",component:()=>b(()=>import("./Graphs.018699c6.js"),["assets/Graphs.018699c6.js","assets/Graphs.342eaf90.css","assets/vendor.4be520cf.js","assets/CandleChartContainer.1f5607a6.js","assets/CandleChartContainer.f132b8a6.css","assets/install.4ca6e0c9.js","assets/install.d2933d0c.js","assets/createSeriesDataSimply.6cdf1b95.js","assets/StrategySelect.db1b9f2f.js"])},{path:"/logs",name:"Freqtrade Logs",component:()=>b(()=>import("./LogView.34bb24ab.js"),["assets/LogView.34bb24ab.js","assets/LogView.f1140aeb.css","assets/vendor.4be520cf.js"])},{path:"/backtest",name:"Freqtrade Backtest",component:()=>b(()=>import("./Backtesting.7b95866b.js"),["assets/Backtesting.7b95866b.js","assets/Backtesting.8ce829dd.css","assets/vendor.4be520cf.js","assets/StrategySelect.db1b9f2f.js","assets/Graphs.342eaf90.css","assets/TradeList.7dbd6e10.js","assets/TradeList.352ea293.css","assets/GestureTap.1e432692.js","assets/GestureTap.62cd18f2.css","assets/ValuePair.422b28cf.js","assets/CandleChartContainer.1f5607a6.js","assets/CandleChartContainer.f132b8a6.css","assets/install.4ca6e0c9.js","assets/install.d2933d0c.js","assets/createSeriesDataSimply.6cdf1b95.js","assets/TradesLog.de59ac3c.js","assets/TradesLog.a2104814.css","assets/PairSummary.db39523a.js","assets/PairSummary.577955e3.css"])},{path:"/dashboard",name:"Freqtrade Dashboard",component:()=>b(()=>import("./Dashboard.c90f9026.js"),["assets/Dashboard.c90f9026.js","assets/Graphs.342eaf90.css","assets/vendor.4be520cf.js","assets/DraggableContainer.cce84be9.js","assets/DraggableContainer.9aded1fe.css","assets/install.4ca6e0c9.js","assets/install.d2933d0c.js","assets/TradesLog.de59ac3c.js","assets/TradesLog.a2104814.css","assets/GestureTap.1e432692.js","assets/GestureTap.62cd18f2.css","assets/TradeList.7dbd6e10.js","assets/TradeList.352ea293.css"])},{path:"/balance",name:"Freqtrade Balance",component:()=>b(()=>import("./Balance.9e953b01.js"),["assets/Balance.9e953b01.js","assets/Balance.40b00372.css","assets/vendor.4be520cf.js","assets/install.4ca6e0c9.js","assets/createSeriesDataSimply.6cdf1b95.js"])},{path:"/open_trades",component:()=>b(()=>import("./TradesList.7aafc3cb.js"),["assets/TradesList.7aafc3cb.js","assets/TradesList.893b2dfc.css","assets/vendor.4be520cf.js","assets/GestureTap.1e432692.js","assets/GestureTap.62cd18f2.css","assets/TradeDetail.5acb8285.js","assets/TradeDetail.8003c29f.css","assets/ValuePair.422b28cf.js","assets/Graphs.342eaf90.css"])},{path:"/trade_history",component:()=>b(()=>import("./TradesList.7aafc3cb.js"),["assets/TradesList.7aafc3cb.js","assets/TradesList.893b2dfc.css","assets/vendor.4be520cf.js","assets/GestureTap.1e432692.js","assets/GestureTap.62cd18f2.css","assets/TradeDetail.5acb8285.js","assets/TradeDetail.8003c29f.css","assets/ValuePair.422b28cf.js","assets/Graphs.342eaf90.css"]),props:{history:!0}},{path:"/pairlist",component:()=>b(()=>import("./FTBotAPIPairList.489f00dd.js"),["assets/FTBotAPIPairList.489f00dd.js","assets/FTBotAPIPairList.8c031c21.css","assets/vendor.4be520cf.js"])},{path:"/settings",name:"Freqtrade Settings",component:()=>b(()=>import("./Settings.2d42a5db.js"),["assets/Settings.2d42a5db.js","assets/Graphs.342eaf90.css","assets/vendor.4be520cf.js"])},{path:"/login",name:"Login",component:()=>b(()=>import("./LoginView.b18ffe92.js"),["assets/LoginView.b18ffe92.js","assets/LoginView.fc437a2d.css","assets/vendor.4be520cf.js"]),meta:{allowAnonymous:!0}},{path:"*",name:"404",component:Ls}],I=new He({mode:"history",base:"/",routes:Cs});I.beforeEach((e,a,s)=>{var t;const n=ve.getters[`${h.ftbot}/${y.hasBots}`];!((t=e.meta)==null?void 0:t.allowAnonymous)&&!n?s({path:"/login",query:{redirect:e.fullPath}}):s()});I.beforeEach((e,a,s)=>{if(e.path==="/login2"&&B.currentUser){s("/");return}if(e.matched.some(n=>n.meta.requiresAuth)&&!B.currentUser){s("login2");return}s()});m.use(Me);const Rs=ca(),F=new Me.Store({modules:{[h.alerts]:Jr,[h.layout]:Ta,[h.uiSettings]:Pa},state:{user:null,currentTheme:Rs,uiVersion:"dev"},getters:{isDarkTheme(e){const a=ia(e.currentTheme);return a?a.dark:!0},getChartTheme(e,a){return a.isDarkTheme?"dark":"light"},getUiVersion(e){return e.uiVersion},loggedIn(e,a){return a[`${h.ftbot}/${y.hasBots}`]}},mutations:{SET_USER(e,a){e.user=a},CLEAR_USER(e){e.user=null},mutateCurrentTheme(e,a){la(a),e.currentTheme=a},setUIVersion(e,a){e.uiVersion=a}},actions:{async login({commit:e},a){const{email:s,password:n}=a;try{await Br(B,s,n)}catch(t){switch(t.code){case"auth/user-not-found":alert("user not found");break;case"auth/wrong-password":alert("wrong password");break;default:alert("something go wrong")}return}e("SET_USER",B.currentUser),I.push("/")},async register({commit:e},a){const{email:s,password:n}=a;try{await Dr(B,s,n)}catch(t){switch(t.code){case"auth/email-already-in-use":alert("email-already-in-use'");break;case"auth/invalid-email":alert("invalid-email");break;case"auth/operation-not-allowed":alert("Operation not allowd");break;case"auth/weak-password":alert("week password");break;default:alert("something go wron")}return}e("SET_USER",B.currentUser),I.push("/")},async logout({commit:e}){await xr(B),e("CLEAR_USER"),I.push("/login")},fetchUser({commit:e}){B.onAuthStateChanged(async a=>{a===null?e("CLEAR_USER"):(e("SET_USER",a),I.isReady()&&I.currentRoute.value.path==="/login2"&&I.push("/"))})},setCurrentTheme({commit:e},a){e("mutateCurrentTheme",a)},setLoggedIn({commit:e},a){e("setLoggedIn",a)},async loadUIVersion({commit:e}){}}});$.migrateLogin();F.registerModule(h.ftbot,Yr(F));Object.entries($.getAvailableBots()).forEach(([,e])=>{F.dispatch(`${h.ftbot}/addBot`,e)});F.dispatch(`${h.ftbot}/selectFirstBot`);F.dispatch(`${h.ftbot}/startRefresh`);var ve=F;Fr(ve);m.config.productionTip=!1;new m({store:ve,router:I,render:e=>e(ps)}).$mount("#app");export{fe as A,T as B,Ur as C,ga as D,Ke as E,it as L,y as M,qr as O,h as S,ha as T,W as a,Bs as b,Es as c,N as d,ka as e,Ss as f,As as g,Hr as h,ee as i,js as j,Ns as k,Ds as l,Fs as m,Us as n,Y as o,wa as p,ea as q,xs as t};
//# sourceMappingURL=index.3277bc57.js.map
