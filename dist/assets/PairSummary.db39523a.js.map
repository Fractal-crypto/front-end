{"version":3,"file":"PairSummary.db39523a.js","sources":["../../src/components/ftbot/PairSummary.vue","../../src/components/ftbot/PairSummary.vue?vue&type=template&lang.js"],"sourcesContent":["<template>\n  <!-- <b-table class=\"table-sm\" :items=\"combinedPairList\" :fields=\"tableFields\"> </b-table> -->\n\n  <b-list-group>\n    <b-list-group-item\n      v-for=\"comb in combinedPairList\"\n      :key=\"comb.pair\"\n      button\n      class=\"d-flex justify-content-between align-items-center py-1\"\n      :active=\"comb.pair === selectedPair\"\n      :title=\"`${comb.pair} - ${comb.tradeCount} trades`\"\n      @click=\"setSelectedPair(comb.pair)\"\n    >\n      <div>\n        {{ comb.pair }}\n        <span v-if=\"comb.locks\" :title=\"comb.lockReason\"> &#128274; </span>\n      </div>\n\n      <TradeProfit v-if=\"comb.trade && !backtestMode\" :trade=\"comb.trade\" />\n      <ProfitPill\n        v-if=\"backtestMode && comb.tradeCount > 0\"\n        :profit-ratio=\"comb.profit\"\n        :stake-currency=\"stakeCurrency\"\n      />\n    </b-list-group-item>\n  </b-list-group>\n</template>\n\n<script lang=\"ts\">\nimport { formatPercent, timestampms } from '@/shared/formatters';\nimport { BotStoreGetters } from '@/store/modules/ftbot';\nimport { Lock, Trade } from '@/types';\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { namespace } from 'vuex-class';\nimport TradeProfit from '@/components/ftbot/TradeProfit.vue';\nimport ProfitPill from '@/components/general/ProfitPill.vue';\nimport StoreModules from '@/store/storeSubModules';\n\nconst ftbot = namespace(StoreModules.ftbot);\n\ninterface CombinedPairList {\n  pair: string;\n  lockReason: string;\n  profitString: string;\n  trade?: Trade;\n  locks?: Lock;\n  profit: number;\n  profitAbs: number;\n  tradeCount: number;\n}\n\n@Component({ components: { TradeProfit, ProfitPill } })\nexport default class PairSummary extends Vue {\n  @Prop({ required: true }) pairlist!: string[];\n\n  @Prop({ required: false, default: () => [] }) currentLocks!: Lock[];\n\n  @Prop({ required: true }) trades!: Trade[];\n\n  /** Sort method, \"normal\" (sorts by open trades > pairlist -> locks) or \"profit\" */\n  @Prop({ required: false, default: 'normal' }) sortMethod!: string;\n\n  @Prop({ required: false, default: false }) backtestMode!: boolean;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @ftbot.Action setSelectedPair!: (pair: string) => void;\n\n  @ftbot.Getter [BotStoreGetters.selectedPair]!: string;\n\n  @ftbot.Getter [BotStoreGetters.stakeCurrency]!: string;\n\n  timestampms = timestampms;\n\n  formatPercent = formatPercent;\n\n  get combinedPairList() {\n    const comb: CombinedPairList[] = [];\n\n    this.pairlist.forEach((pair) => {\n      const trades: Trade[] = this.trades.filter((el) => el.pair === pair);\n      const allLocks = this.currentLocks.filter((el) => el.pair === pair);\n      let lockReason = '';\n      let locks;\n\n      // Sort to have longer timeframe in front\n      allLocks.sort((a, b) => (a.lock_end_timestamp > b.lock_end_timestamp ? -1 : 1));\n      if (allLocks.length > 0) {\n        [locks] = allLocks;\n        lockReason = `${timestampms(locks.lock_end_timestamp)} - ${locks.reason}`;\n      }\n      let profitString = '';\n      let profit = 0;\n      let profitAbs = 0;\n      trades.forEach((trade) => {\n        profit += trade.profit_ratio;\n        profitAbs += trade.profit_abs;\n      });\n      const tradeCount = trades.length;\n      const trade = tradeCount ? trades[0] : undefined;\n      if (trades.length > 0) {\n        profitString = `Current profit: ${formatPercent(profit)}`;\n      }\n      if (trade) {\n        profitString += `\\nOpen since: ${timestampms(trade.open_timestamp)}`;\n      }\n      comb.push({ pair, trade, locks, lockReason, profitString, profit, profitAbs, tradeCount });\n    });\n    if (this.sortMethod === 'profit') {\n      comb.sort((a, b) => {\n        if (a.profit > b.profit) {\n          return -1;\n        }\n        return 1;\n      });\n    } else {\n      // sort Pairs: \"with open trade\" -> available -> locked\n      comb.sort((a, b) => {\n        if (a.trade && !b.trade) {\n          return -1;\n        }\n        if (a.trade && b.trade) {\n          // 2 open trade pairs\n          return a.trade.trade_id > b.trade.trade_id ? 1 : -1;\n        }\n        if (!a.locks && b.locks) {\n          return -1;\n        }\n        if (a.locks && b.locks) {\n          // Both have locks\n          return a.locks.lock_end_timestamp > b.locks.lock_end_timestamp ? 1 : -1;\n        }\n        return 1;\n      });\n    }\n    return comb;\n  }\n\n  get tableFields() {\n    return [\n      { key: 'pair', label: 'Pair' },\n      {\n        key: 'locks.lock_end_timestamp',\n        label: 'Lock',\n        formatter: (value) => (value ? `${timestampms(value)}` : ''),\n      },\n      {\n        key: 'trade.current_profit',\n        label: 'Position',\n        formatter: (value) => formatPercent(value, 3),\n      },\n    ];\n  }\n}\n</script>\n\n<style scoped>\n.list-group {\n  text-align: left;\n}\n</style>\n","\n<!-- <b-table class=\"table-sm\" :items=\"combinedPairList\" :fields=\"tableFields\"> </b-table> -->\n\n<b-list-group>\n  <b-list-group-item\n    v-for=\"comb in combinedPairList\"\n    :key=\"comb.pair\"\n    button\n    class=\"d-flex justify-content-between align-items-center py-1\"\n    :active=\"comb.pair === selectedPair\"\n    :title=\"`${comb.pair} - ${comb.tradeCount} trades`\"\n    @click=\"setSelectedPair(comb.pair)\"\n  >\n    <div>\n      {{ comb.pair }}\n      <span v-if=\"comb.locks\" :title=\"comb.lockReason\"> &#128274; </span>\n    </div>\n\n    <TradeProfit v-if=\"comb.trade && !backtestMode\" :trade=\"comb.trade\" />\n    <ProfitPill\n      v-if=\"backtestMode && comb.tradeCount > 0\"\n      :profit-ratio=\"comb.profit\"\n      :stake-currency=\"stakeCurrency\"\n    />\n  </b-list-group-item>\n</b-list-group>\n"],"names":["PairSummary"],"mappings":"0XAsCA,mBAcA,sBAAA;q/BAAAA,mDAAAA,GCpDA,GAAI,GAAS,UAAY,CAAC,GAAI,GAAI,KAAS,EAAG,EAAI,eAAmB,EAAG,EAAI,MAAM,IAAI,EAAG,MAAO,GAAG,eAAe,EAAI,GAAI,EAAI,iBAAkB,SAAS,EAAK,CAAC,MAAO,GAAG,oBAAoB,CAAC,IAAI,EAAK,KAAK,YAAY,yDAAyD,MAAM,CAAC,OAAS,GAAG,OAAS,EAAK,OAAS,EAAI,aAAa,MAAU,EAAK,KAAQ,MAAS,EAAK,WAAc,WAAY,GAAG,CAAC,MAAQ,SAAS,EAAO,CAAC,MAAO,GAAI,gBAAgB,EAAK,SAAS,CAAC,EAAG,MAAM,CAAC,EAAI,GAAG,IAAI,EAAI,GAAG,EAAK,MAAM,KAAM,EAAK,MAAO,EAAG,OAAO,CAAC,MAAM,CAAC,MAAQ,EAAK,aAAa,CAAC,EAAI,GAAG,iBAAU,EAAI,OAAQ,EAAK,OAAS,CAAC,EAAI,aAAc,EAAG,cAAc,CAAC,MAAM,CAAC,MAAQ,EAAK,SAAS,EAAI,KAAM,EAAI,cAAgB,EAAK,WAAa,EAAG,EAAG,aAAa,CAAC,MAAM,CAAC,eAAe,EAAK,OAAO,iBAAiB,EAAI,iBAAiB,EAAI,MAAM,KAAK,IAC5zB,EAAkB,GACtB,EAAO,cAAgB"}