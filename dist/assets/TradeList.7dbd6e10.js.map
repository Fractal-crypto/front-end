{"version":3,"file":"TradeList.7dbd6e10.js","sources":["../../src/components/ftbot/TradeActions.vue","../../src/components/ftbot/TradeActions.vue?vue&type=template&lang.js","../../src/components/ftbot/TradeList.vue","../../src/components/ftbot/TradeList.vue?vue&type=template&lang.js"],"sourcesContent":["<template>\n  <div class=\"d-flex flex-column\">\n    <b-button\n      v-if=\"botApiVersion <= 1.1\"\n      class=\"btn-xs text-left\"\n      size=\"sm\"\n      title=\"Forcesell\"\n      @click=\"$emit('forceSell', trade)\"\n    >\n      <ForceSellIcon :size=\"16\" title=\"Forcesell\" class=\"mr-1\" />Forcesell\n    </b-button>\n    <b-button\n      v-if=\"botApiVersion > 1.1\"\n      class=\"btn-xs text-left\"\n      size=\"sm\"\n      title=\"Forcesell limit\"\n      @click=\"$emit('forceSell', trade, 'limit')\"\n    >\n      <ForceSellIcon :size=\"16\" title=\"Forcesell\" class=\"mr-1\" />Forcesell limit\n    </b-button>\n    <b-button\n      v-if=\"botApiVersion > 1.1\"\n      class=\"btn-xs text-left mt-1\"\n      size=\"sm\"\n      title=\"Forcesell market\"\n      @click=\"$emit('forceSell', trade, 'market')\"\n    >\n      <ForceSellIcon :size=\"16\" title=\"Forcesell\" class=\"mr-1\" />Forcesell market\n    </b-button>\n\n    <b-button\n      class=\"btn-xs text-left mt-1\"\n      size=\"sm\"\n      title=\"Delete trade\"\n      @click=\"$emit('deleteTrade', trade)\"\n    >\n      <DeleteIcon :size=\"16\" title=\"Delete trade\" class=\"mr-1\" />\n      Delete\n    </b-button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Trade } from '@/types';\nimport { defineComponent } from '@vue/composition-api';\nimport DeleteIcon from 'vue-material-design-icons/Delete.vue';\nimport ForceSellIcon from 'vue-material-design-icons/CloseBoxMultiple.vue';\n\nexport default defineComponent({\n  name: 'TradeActions',\n  components: { DeleteIcon, ForceSellIcon },\n  props: {\n    botApiVersion: {\n      type: Number,\n      default: 1.0,\n    },\n    trade: {\n      type: Object as () => Trade,\n      required: true,\n    },\n  },\n  emits: ['forceSell', 'deleteTrade'],\n  setup() {\n    return {};\n  },\n});\n</script>\n\n<style scoped lang=\"scss\"></style>\n","\n<div class=\"d-flex flex-column\">\n  <b-button\n    v-if=\"botApiVersion <= 1.1\"\n    class=\"btn-xs text-left\"\n    size=\"sm\"\n    title=\"Forcesell\"\n    @click=\"$emit('forceSell', trade)\"\n  >\n    <ForceSellIcon :size=\"16\" title=\"Forcesell\" class=\"mr-1\" />Forcesell\n  </b-button>\n  <b-button\n    v-if=\"botApiVersion > 1.1\"\n    class=\"btn-xs text-left\"\n    size=\"sm\"\n    title=\"Forcesell limit\"\n    @click=\"$emit('forceSell', trade, 'limit')\"\n  >\n    <ForceSellIcon :size=\"16\" title=\"Forcesell\" class=\"mr-1\" />Forcesell limit\n  </b-button>\n  <b-button\n    v-if=\"botApiVersion > 1.1\"\n    class=\"btn-xs text-left mt-1\"\n    size=\"sm\"\n    title=\"Forcesell market\"\n    @click=\"$emit('forceSell', trade, 'market')\"\n  >\n    <ForceSellIcon :size=\"16\" title=\"Forcesell\" class=\"mr-1\" />Forcesell market\n  </b-button>\n\n  <b-button\n    class=\"btn-xs text-left mt-1\"\n    size=\"sm\"\n    title=\"Delete trade\"\n    @click=\"$emit('deleteTrade', trade)\"\n  >\n    <DeleteIcon :size=\"16\" title=\"Delete trade\" class=\"mr-1\" />\n    Delete\n  </b-button>\n</div>\n","<template>\n  <div class=\"h-100 overflow-auto w-100\">\n    <b-table\n      ref=\"tradesTable\"\n      small\n      hover\n      stacked=\"md\"\n      :items=\"trades\"\n      :fields=\"tableFields\"\n      show-empty\n      :empty-text=\"emptyText\"\n      :per-page=\"perPage\"\n      :current-page=\"currentPage\"\n      primary-key=\"botTradeId\"\n      selectable\n      select-mode=\"single\"\n      :filter=\"filterText\"\n      @row-contextmenu=\"handleContextMenuEvent\"\n      @row-clicked=\"onRowClicked\"\n      @row-selected=\"onRowSelected\"\n    >\n      <template #cell(actions)=\"row\">\n        <b-button :id=\"`btn-actions_${row.index}`\" class=\"btn-xs\" size=\"sm\" title=\"Actions\">\n          <ActionIcon :size=\"16\" title=\"Actions\" />\n        </b-button>\n        <b-popover :target=\"`btn-actions_${row.index}`\" triggers=\"focus\" placement=\"left\">\n          <trade-actions\n            :trade=\"row.item\"\n            :bot-api-version=\"botApiVersion\"\n            @deleteTrade=\"removeTradeHandler\"\n            @forceSell=\"forcesellHandler\"\n          />\n        </b-popover>\n      </template>\n      <template #cell(pair)=\"row\">\n        <span>\n          {{\n            `${row.item.pair}${\n              row.item.open_order_id === undefined || row.item.open_order_id === null ? '' : '*'\n            }`\n          }}\n        </span>\n      </template>\n      <template #cell(trade_id)=\"row\">\n        {{ row.item.trade_id }}\n        {{ botApiVersion > 2.0 ? '| ' + (row.item.is_short ? 'Short' : 'Long') : '' }}\n      </template>\n      <template #cell(profit)=\"row\">\n        <trade-profit :trade=\"row.item\" />\n      </template>\n      <template #cell(open_timestamp)=\"row\">\n        <DateTimeTZ :date=\"row.item.open_timestamp\" />\n      </template>\n      <template #cell(close_timestamp)=\"row\">\n        <DateTimeTZ :date=\"row.item.close_timestamp\" />\n      </template>\n    </b-table>\n    <div class=\"w-100 d-flex justify-content-between\">\n      <b-pagination\n        v-if=\"!activeTrades\"\n        v-model=\"currentPage\"\n        :total-rows=\"rows\"\n        :per-page=\"perPage\"\n        aria-controls=\"my-table\"\n      ></b-pagination>\n      <b-input\n        v-if=\"showFilter\"\n        v-model=\"filterText\"\n        type=\"text\"\n        placeholder=\"Filter\"\n        size=\"sm\"\n        style=\"width: unset\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Prop, Watch } from 'vue-property-decorator';\nimport { namespace } from 'vuex-class';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { formatPercent, formatPrice } from '@/shared/formatters';\nimport { MultiDeletePayload, MultiForcesellPayload, Trade } from '@/types';\nimport ActionIcon from 'vue-material-design-icons/GestureTap.vue';\nimport DateTimeTZ from '@/components/general/DateTimeTZ.vue';\nimport { BotStoreGetters } from '@/store/modules/ftbot';\nimport StoreModules from '@/store/storeSubModules';\nimport TradeProfit from './TradeProfit.vue';\nimport TradeActions from './TradeActions.vue';\n\nconst ftbot = namespace(StoreModules.ftbot);\n\n@Component({\n  components: { ActionIcon, DateTimeTZ, TradeProfit, TradeActions },\n})\nexport default class TradeList extends Vue {\n  $refs!: {\n    tradesTable: HTMLFormElement;\n  };\n\n  formatPercent = formatPercent;\n\n  formatPrice = formatPrice;\n\n  @Prop({ required: true }) trades!: Array<Trade>;\n\n  @Prop({ default: 'Trades' }) title!: string;\n\n  @Prop({ required: false, default: '' }) stakeCurrency!: string;\n\n  @Prop({ default: false }) activeTrades!: boolean;\n\n  @Prop({ default: false }) showFilter!: boolean;\n\n  @Prop({ default: false, type: Boolean }) multiBotView!: boolean;\n\n  @Prop({ default: 'No Trades to show.' }) emptyText!: string;\n\n  @ftbot.Getter [BotStoreGetters.detailTradeId]?: number;\n\n  @ftbot.Getter [BotStoreGetters.stakeCurrencyDecimals]!: number;\n\n  @ftbot.Getter [BotStoreGetters.botApiVersion]: number;\n\n  @ftbot.Action setDetailTrade;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @ftbot.Action forceSellMulti!: (payload: MultiForcesellPayload) => Promise<string>;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @ftbot.Action deleteTradeMulti!: (payload: MultiDeletePayload) => Promise<string>;\n\n  currentPage = 1;\n\n  selectedItemIndex? = undefined;\n\n  filterText = '';\n\n  @Watch('detailTradeId')\n  watchTradeDetail(val) {\n    const index = this.trades.findIndex((v) => v.trade_id === val);\n    // Unselect when another tradeTable is selected!\n    if (index < 0) {\n      this.$refs.tradesTable.clearSelected();\n    }\n  }\n\n  get rows(): number {\n    return this.trades.length;\n  }\n\n  perPage = this.activeTrades ? 200 : 15;\n\n  // Added to table-fields for current trades\n  openFields: Record<string, string | Function>[] = [{ key: 'actions' }];\n\n  // Added to table-fields for historic trades\n  closedFields: Record<string, string | Function>[] = [\n    { key: 'close_timestamp', label: 'Close date' },\n    { key: 'sell_reason', label: 'Close Reason' },\n  ];\n\n  tableFields: Record<string, string | Function>[] = [\n    this.multiBotView ? { key: 'botName', label: 'Bot' } : {},\n    { key: 'trade_id', label: 'ID' },\n    { key: 'pair', label: 'Pair' },\n    { key: 'amount', label: 'Amount' },\n    {\n      key: 'stake_amount',\n      label: 'Stake amount',\n      formatter: (value: number) => this.formatPriceWithDecimals(value),\n    },\n    {\n      key: 'open_rate',\n      label: 'Open rate',\n      formatter: (value: number) => this.formatPrice(value),\n    },\n    {\n      key: this.activeTrades ? 'current_rate' : 'close_rate',\n      label: this.activeTrades ? 'Current rate' : 'Close rate',\n      formatter: (value: number) => this.formatPrice(value),\n    },\n    {\n      key: 'profit',\n      label: this.activeTrades ? 'Current profit %' : 'Profit %',\n      formatter: (value: number, key, item: Trade) => {\n        const percent = formatPercent(item.profit_ratio, 2);\n        return `${percent} ${`(${this.formatPriceWithDecimals(item.profit_abs)})`}`;\n      },\n    },\n    { key: 'open_timestamp', label: 'Open date' },\n    ...(this.activeTrades ? this.openFields : this.closedFields),\n  ];\n\n  formatPriceWithDecimals(price) {\n    return formatPrice(price, this.stakeCurrencyDecimals);\n  }\n\n  forcesellHandler(item: Trade, ordertype: string | undefined = undefined) {\n    this.$bvModal\n      .msgBoxConfirm(`Really forcesell trade ${item.trade_id} (Pair ${item.pair})?`)\n      .then((value: boolean) => {\n        if (value) {\n          const payload: MultiForcesellPayload = {\n            tradeid: String(item.trade_id),\n            botId: item.botId,\n          };\n          if (ordertype) {\n            payload.ordertype = ordertype;\n          }\n          this.forceSellMulti(payload)\n            .then((xxx) => console.log(xxx))\n            .catch((error) => console.log(error.response));\n        }\n      });\n  }\n\n  handleContextMenuEvent(item, index, event) {\n    // stop browser context menu from appearing\n    if (!this.activeTrades) {\n      return;\n    }\n    event.preventDefault();\n    // log the selected item to the console\n    console.log(item);\n  }\n\n  removeTradeHandler(item) {\n    console.log(item);\n    this.$bvModal\n      .msgBoxConfirm(`Really delete trade ${item.trade_id} (Pair ${item.pair})?`)\n      .then((value: boolean) => {\n        if (value) {\n          const payload: MultiDeletePayload = {\n            tradeid: String(item.trade_id),\n            botId: item.botId,\n          };\n          this.deleteTradeMulti(payload).catch((error) => console.log(error.response));\n        }\n      });\n  }\n\n  onRowClicked(item, index) {\n    // Only allow single selection mode!\n    if (\n      item &&\n      item.trade_id !== this.detailTradeId &&\n      !this.$refs.tradesTable.isRowSelected(index)\n    ) {\n      this.setDetailTrade(item);\n    } else {\n      console.log('unsetting item');\n      this.setDetailTrade(null);\n    }\n  }\n\n  onRowSelected() {\n    if (this.detailTradeId) {\n      const itemIndex = this.trades.findIndex((v) => v.trade_id === this.detailTradeId);\n      if (itemIndex >= 0) {\n        this.$refs.tradesTable.selectRow(itemIndex);\n      } else {\n        console.log(`Unsetting item for tradeid ${this.selectedItemIndex}`);\n        this.selectedItemIndex = undefined;\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.card-body {\n  padding: 0 0.2em;\n}\n.table-sm {\n  font-size: $fontsize-small;\n}\n.btn-xs {\n  padding: 0.1rem 0.25rem;\n  font-size: 0.75rem;\n}\n</style>\n","\n<div class=\"h-100 overflow-auto w-100\">\n  <b-table\n    ref=\"tradesTable\"\n    small\n    hover\n    stacked=\"md\"\n    :items=\"trades\"\n    :fields=\"tableFields\"\n    show-empty\n    :empty-text=\"emptyText\"\n    :per-page=\"perPage\"\n    :current-page=\"currentPage\"\n    primary-key=\"botTradeId\"\n    selectable\n    select-mode=\"single\"\n    :filter=\"filterText\"\n    @row-contextmenu=\"handleContextMenuEvent\"\n    @row-clicked=\"onRowClicked\"\n    @row-selected=\"onRowSelected\"\n  >\n    <template #cell(actions)=\"row\">\n      <b-button :id=\"`btn-actions_${row.index}`\" class=\"btn-xs\" size=\"sm\" title=\"Actions\">\n        <ActionIcon :size=\"16\" title=\"Actions\" />\n      </b-button>\n      <b-popover :target=\"`btn-actions_${row.index}`\" triggers=\"focus\" placement=\"left\">\n        <trade-actions\n          :trade=\"row.item\"\n          :bot-api-version=\"botApiVersion\"\n          @deleteTrade=\"removeTradeHandler\"\n          @forceSell=\"forcesellHandler\"\n        />\n      </b-popover>\n    </template>\n    <template #cell(pair)=\"row\">\n      <span>\n        {{\n          `${row.item.pair}${\n            row.item.open_order_id === undefined || row.item.open_order_id === null ? '' : '*'\n          }`\n        }}\n      </span>\n    </template>\n    <template #cell(trade_id)=\"row\">\n      {{ row.item.trade_id }}\n      {{ botApiVersion > 2.0 ? '| ' + (row.item.is_short ? 'Short' : 'Long') : '' }}\n    </template>\n    <template #cell(profit)=\"row\">\n      <trade-profit :trade=\"row.item\" />\n    </template>\n    <template #cell(open_timestamp)=\"row\">\n      <DateTimeTZ :date=\"row.item.open_timestamp\" />\n    </template>\n    <template #cell(close_timestamp)=\"row\">\n      <DateTimeTZ :date=\"row.item.close_timestamp\" />\n    </template>\n  </b-table>\n  <div class=\"w-100 d-flex justify-content-between\">\n    <b-pagination\n      v-if=\"!activeTrades\"\n      v-model=\"currentPage\"\n      :total-rows=\"rows\"\n      :per-page=\"perPage\"\n      aria-controls=\"my-table\"\n    ></b-pagination>\n    <b-input\n      v-if=\"showFilter\"\n      v-model=\"filterText\"\n      type=\"text\"\n      placeholder=\"Filter\"\n      size=\"sm\"\n      style=\"width: unset\"\n    />\n  </div>\n</div>\n"],"names":["render","staticRenderFns","TradeList"],"mappings":"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"}