{"version":3,"file":"Dashboard.c90f9026.js","sources":["../../src/components/ftbot/BotComparisonList.vue","../../src/components/ftbot/BotComparisonList.vue?vue&type=template&lang.js","../../src/views/Dashboard.vue","../../src/views/Dashboard.vue?vue&type=template&lang.js"],"sourcesContent":["<template>\n  <b-table\n    ref=\"tradesTable\"\n    small\n    hover\n    show-empty\n    primary-key=\"botId\"\n    :items=\"tableItems\"\n    :fields=\"tableFields\"\n  >\n    <template #cell(profitOpen)=\"row\">\n      <profit-pill\n        v-if=\"row.item.profitOpen && row.item.botId != 'Summary'\"\n        :profit-ratio=\"row.item.profitOpenRatio\"\n        :profit-abs=\"row.item.profitOpen\"\n        :stake-currency=\"row.item.stakeCurrency\"\n      />\n    </template>\n    <template #cell(profitClosed)=\"row\">\n      <profit-pill\n        v-if=\"row.item.profitClosed && row.item.botId != 'Summary'\"\n        :profit-ratio=\"row.item.profitClosedRatio\"\n        :profit-abs=\"row.item.profitClosed\"\n        :stake-currency=\"row.item.stakeCurrency\"\n      />\n    </template>\n\n    <template #cell(balance)=\"row\">\n      <div v-if=\"row.item.balance\">\n        <span :title=\"row.item.stakeCurrency\"\n          >{{ formatPrice(row.item.balance, row.item.stakeCurrencyDecimals) }}\n        </span>\n        <span clas=\"text-small\">{{ row.item.stakeCurrency }}</span>\n      </div>\n    </template>\n    <template #cell(winVsLoss)=\"row\">\n      <div v-if=\"row.item.losses !== undefined\">\n        <span class=\"text-profit\">{{ row.item.wins }}</span> /\n        <span class=\"text-loss\">{{ row.item.losses }}</span>\n      </div>\n    </template>\n  </b-table>\n</template>\n\n<script lang=\"ts\">\nimport { MultiBotStoreGetters } from '@/store/modules/botStoreWrapper';\nimport { BalanceInterface, BotDescriptors, BotState, ProfitInterface, Trade } from '@/types';\nimport { Component, Vue } from 'vue-property-decorator';\nimport { namespace } from 'vuex-class';\nimport ProfitPill from '@/components/general/ProfitPill.vue';\nimport { formatPrice } from '@/shared/formatters';\nimport StoreModules from '@/store/storeSubModules';\n\nconst ftbot = namespace(StoreModules.ftbot);\n\n@Component({ components: { ProfitPill } })\nexport default class BotComparisonList extends Vue {\n  @ftbot.Getter [MultiBotStoreGetters.allProfit]!: Record<string, ProfitInterface>;\n\n  @ftbot.Getter [MultiBotStoreGetters.allOpenTradeCount]!: Record<string, number>;\n\n  @ftbot.Getter [MultiBotStoreGetters.allOpenTrades]!: Record<string, Trade[]>;\n\n  @ftbot.Getter [MultiBotStoreGetters.allBotState]!: Record<string, BotState>;\n\n  @ftbot.Getter [MultiBotStoreGetters.allBalance]!: Record<string, BalanceInterface>;\n\n  @ftbot.Getter [MultiBotStoreGetters.allAvailableBots]!: BotDescriptors;\n\n  formatPrice = formatPrice;\n\n  get tableItems() {\n    console.log('tableItems called');\n    const val: any[] = [];\n    const summary = {\n      botId: 'Summary',\n      profitClosed: 0,\n      profitClosedRatio: 0,\n      profitOpen: 0,\n      profitOpenRatio: 0,\n      stakeCurrency: 'USDT',\n      wins: 0,\n      losses: 0,\n    };\n\n    Object.entries(this.allProfit).forEach(([k, v]) => {\n      const allStakes = this.allOpenTrades[k].reduce((a, b) => a + b.stake_amount, 0);\n      const profitOpenRatio =\n        this.allOpenTrades[k].reduce((a, b) => a + b.profit_ratio * b.stake_amount, 0) / allStakes;\n      const profitOpen = this.allOpenTrades[k].reduce((a, b) => a + b.profit_abs, 0);\n\n      // TODO: handle one inactive bot ...\n      val.push({\n        botId: this.allAvailableBots[k].botName,\n        trades: `${this.allOpenTradeCount[k]} / ${this.allBotState[k]?.max_open_trades || 'N/A'}`,\n        profitClosed: v.profit_closed_coin,\n        profitClosedRatio: v.profit_closed_ratio || 0,\n        stakeCurrency: this.allBotState[k]?.stake_currency || '',\n        profitOpenRatio,\n        profitOpen,\n        wins: v.winning_trades,\n        losses: v.losing_trades,\n        balance: this.allBalance[k]?.total,\n        stakeCurrencyDecimals: this.allBotState[k]?.stake_currency_decimals || 3,\n      });\n      if (v.profit_closed_coin !== undefined) {\n        summary.profitClosed += v.profit_closed_coin;\n        summary.profitOpen += v.profit_all_coin;\n        summary.wins += v.winning_trades;\n        summary.losses += v.losing_trades;\n        // summary.decimals = this.allBotState[k]?.stake_currency_decimals || summary.decimals;\n      }\n    });\n    val.push(summary);\n    return val;\n  }\n\n  tableFields: Record<string, string | Function>[] = [\n    { key: 'botId', label: 'Bot' },\n    { key: 'trades', label: 'Trades' },\n    { key: 'profitOpen', label: 'Open Profit' },\n    { key: 'profitClosed', label: 'Closed Profit' },\n    { key: 'balance', label: 'Balance' },\n    { key: 'winVsLoss', label: 'W/L' },\n  ];\n}\n</script>\n\n<style scoped></style>\n","\n<b-table\n  ref=\"tradesTable\"\n  small\n  hover\n  show-empty\n  primary-key=\"botId\"\n  :items=\"tableItems\"\n  :fields=\"tableFields\"\n>\n  <template #cell(profitOpen)=\"row\">\n    <profit-pill\n      v-if=\"row.item.profitOpen && row.item.botId != 'Summary'\"\n      :profit-ratio=\"row.item.profitOpenRatio\"\n      :profit-abs=\"row.item.profitOpen\"\n      :stake-currency=\"row.item.stakeCurrency\"\n    />\n  </template>\n  <template #cell(profitClosed)=\"row\">\n    <profit-pill\n      v-if=\"row.item.profitClosed && row.item.botId != 'Summary'\"\n      :profit-ratio=\"row.item.profitClosedRatio\"\n      :profit-abs=\"row.item.profitClosed\"\n      :stake-currency=\"row.item.stakeCurrency\"\n    />\n  </template>\n\n  <template #cell(balance)=\"row\">\n    <div v-if=\"row.item.balance\">\n      <span :title=\"row.item.stakeCurrency\"\n        >{{ formatPrice(row.item.balance, row.item.stakeCurrencyDecimals) }}\n      </span>\n      <span clas=\"text-small\">{{ row.item.stakeCurrency }}</span>\n    </div>\n  </template>\n  <template #cell(winVsLoss)=\"row\">\n    <div v-if=\"row.item.losses !== undefined\">\n      <span class=\"text-profit\">{{ row.item.wins }}</span> /\n      <span class=\"text-loss\">{{ row.item.losses }}</span>\n    </div>\n  </template>\n</b-table>\n","<template>\n  <GridLayout\n    class=\"h-100 w-100\"\n    :row-height=\"50\"\n    :layout.sync=\"gridLayout\"\n    :vertical-compact=\"false\"\n    :margin=\"[5, 5]\"\n    :responsive-layouts=\"responsiveGridLayouts\"\n    :is-resizable=\"!isLayoutLocked\"\n    :is-draggable=\"!isLayoutLocked\"\n    :responsive=\"true\"\n    :prevent-collision=\"true\"\n    :cols=\"{ lg: 12, md: 12, sm: 12, xs: 4, xxs: 2 }\"\n    @layout-updated=\"layoutUpdated\"\n    @breakpoint-changed=\"breakpointChanged\"\n  >\n    <GridItem\n      :i=\"gridLayoutDaily.i\"\n      :x=\"gridLayoutDaily.x\"\n      :y=\"gridLayoutDaily.y\"\n      :w=\"gridLayoutDaily.w\"\n      :h=\"gridLayoutDaily.h\"\n      :min-w=\"3\"\n      :min-h=\"4\"\n      drag-allow-from=\".drag-header\"\n    >\n      <DraggableContainer :header=\"`Daily Profit ${botCount > 1 ? 'combined' : ''}`\">\n        <DailyChart\n          v-if=\"allDailyStatsAllBots\"\n          :daily-stats=\"allDailyStatsAllBots\"\n          :show-title=\"false\"\n        />\n      </DraggableContainer>\n    </GridItem>\n    <GridItem\n      :i=\"gridLayoutBotComparison.i\"\n      :x=\"gridLayoutBotComparison.x\"\n      :y=\"gridLayoutBotComparison.y\"\n      :w=\"gridLayoutBotComparison.w\"\n      :h=\"gridLayoutBotComparison.h\"\n      :min-w=\"3\"\n      :min-h=\"4\"\n      drag-allow-from=\".drag-header\"\n    >\n      <DraggableContainer header=\"Bot comparison\">\n        <bot-comparison-list />\n      </DraggableContainer>\n    </GridItem>\n    <GridItem\n      :i=\"gridLayoutAllOpenTrades.i\"\n      :x=\"gridLayoutAllOpenTrades.x\"\n      :y=\"gridLayoutAllOpenTrades.y\"\n      :w=\"gridLayoutAllOpenTrades.w\"\n      :h=\"gridLayoutAllOpenTrades.h\"\n      :min-w=\"3\"\n      :min-h=\"4\"\n      drag-allow-from=\".drag-header\"\n    >\n      <DraggableContainer header=\"Open Trades\">\n        <trade-list :active-trades=\"true\" :trades=\"allOpenTradesAllBots\" multi-bot-view />\n      </DraggableContainer>\n    </GridItem>\n    <GridItem\n      :i=\"gridLayoutCumChart.i\"\n      :x=\"gridLayoutCumChart.x\"\n      :y=\"gridLayoutCumChart.y\"\n      :w=\"gridLayoutCumChart.w\"\n      :h=\"gridLayoutCumChart.h\"\n      :min-w=\"3\"\n      :min-h=\"4\"\n      drag-allow-from=\".drag-header\"\n    >\n<!--      <DraggableContainer header=\"Cumulative Profit\">-->\n<!--        <CumProfitChart :trades=\"allTradesAllBots\" :show-title=\"false\" />-->\n<!--      </DraggableContainer>-->\n      <DraggableContainer header=\"Trades Log\">\n        <TradesLogChart :trades=\"allTradesAllBots\" :show-title=\"false\" />\n      </DraggableContainer>\n    </GridItem>\n    <GridItem\n      :i=\"gridLayoutTradesLogChart.i\"\n      :x=\"gridLayoutTradesLogChart.x\"\n      :y=\"gridLayoutTradesLogChart.y\"\n      :w=\"gridLayoutTradesLogChart.w\"\n      :h=\"gridLayoutTradesLogChart.h\"\n      :min-w=\"3\"\n      :min-h=\"4\"\n      drag-allow-from=\".drag-header\"\n    >\n<!--      <DraggableContainer header=\"Trades Log\">-->\n<!--        <TradesLogChart :trades=\"allTradesAllBots\" :show-title=\"false\" />-->\n<!--      </DraggableContainer>-->\n    </GridItem>\n  </GridLayout>\n</template>\n\n<script lang=\"ts\">\nimport { formatPrice } from '@/shared/formatters';\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport { namespace } from 'vuex-class';\nimport { GridLayout, GridItem, GridItemData } from 'vue-grid-layout';\n\nimport DailyChart from '@/components/charts/DailyChart.vue';\nimport CumProfitChart from '@/components/charts/CumProfitChart.vue';\nimport TradesLogChart from '@/components/charts/TradesLog.vue';\nimport BotComparisonList from '@/components/ftbot/BotComparisonList.vue';\nimport TradeList from '@/components/ftbot/TradeList.vue';\nimport DraggableContainer from '@/components/layout/DraggableContainer.vue';\n\nimport {\n  DashboardLayout,\n  findGridLayout,\n  LayoutActions,\n  LayoutGetters,\n} from '@/store/modules/layout';\nimport { Trade, DailyReturnValue, DailyPayload, ClosedTrade } from '@/types';\nimport { BotStoreGetters } from '@/store/modules/ftbot';\nimport { MultiBotStoreGetters } from '@/store/modules/botStoreWrapper';\nimport StoreModules from '@/store/storeSubModules';\n\nconst ftbot = namespace(StoreModules.ftbot);\nconst layoutNs = namespace(StoreModules.layout);\n\n@Component({\n  components: {\n    GridLayout,\n    GridItem,\n    DailyChart,\n    CumProfitChart,\n    TradesLogChart,\n    BotComparisonList,\n    TradeList,\n    DraggableContainer,\n  },\n})\nexport default class Dashboard extends Vue {\n  @ftbot.Getter [MultiBotStoreGetters.botCount]!: number;\n\n  @ftbot.Getter [MultiBotStoreGetters.allOpenTradesAllBots]!: Trade[];\n\n  @ftbot.Getter [MultiBotStoreGetters.allTradesAllBots]!: ClosedTrade[];\n\n  @ftbot.Getter [MultiBotStoreGetters.allDailyStatsAllBots]!: Record<string, DailyReturnValue>;\n\n  @ftbot.Getter [BotStoreGetters.performanceStats]!: PerformanceEntry[];\n\n  @ftbot.Action getPerformance;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @ftbot.Action allGetDaily!: (payload?: DailyPayload) => void;\n\n  @ftbot.Action getTrades;\n\n  @ftbot.Action getOpenTrades;\n\n  @ftbot.Action getProfit;\n\n  @layoutNs.Getter [LayoutGetters.getDashboardLayoutSm]!: GridItemData[];\n\n  @layoutNs.Getter [LayoutGetters.getDashboardLayout]!: GridItemData[];\n\n  @layoutNs.Action [LayoutActions.setDashboardLayout];\n\n  @layoutNs.Getter [LayoutGetters.getLayoutLocked]: boolean;\n\n  formatPrice = formatPrice;\n\n  localGridLayout: GridItemData[] = [];\n\n  currentBreakpoint = '';\n\n  get isLayoutLocked() {\n    return this.getLayoutLocked || !this.isResizableLayout;\n  }\n\n  get isResizableLayout() {\n    return ['', 'sm', 'md', 'lg', 'xl'].includes(this.currentBreakpoint);\n  }\n\n  get gridLayout() {\n    if (this.isResizableLayout) {\n      return this.getDashboardLayout;\n    }\n    return this.localGridLayout;\n  }\n\n  set gridLayout(newLayout) {\n    // Dummy setter to make gridLayout happy. Updates happen through layoutUpdated.\n  }\n\n  layoutUpdated(newLayout) {\n    // Frozen layouts for small screen sizes.\n    if (this.isResizableLayout) {\n      console.log('newlayout', newLayout);\n      console.log('saving dashboard');\n      this.setDashboardLayout(newLayout);\n    }\n  }\n\n  get gridLayoutDaily(): GridItemData {\n    return findGridLayout(this.gridLayout, DashboardLayout.dailyChart);\n  }\n\n  get gridLayoutBotComparison(): GridItemData {\n    return findGridLayout(this.gridLayout, DashboardLayout.botComparison);\n  }\n\n  get gridLayoutAllOpenTrades(): GridItemData {\n    return findGridLayout(this.gridLayout, DashboardLayout.allOpenTrades);\n  }\n\n  get gridLayoutCumChart(): GridItemData {\n    return findGridLayout(this.gridLayout, DashboardLayout.cumChartChart);\n  }\n\n  get gridLayoutTradesLogChart(): GridItemData {\n    return findGridLayout(this.gridLayout, DashboardLayout.tradesLogChart);\n  }\n\n  get responsiveGridLayouts() {\n    return {\n      sm: this.getDashboardLayoutSm,\n    };\n  }\n\n  mounted() {\n    this.allGetDaily({ timescale: 30 });\n    this.getTrades();\n    this.getOpenTrades();\n    this.getPerformance();\n    this.getProfit();\n    this.localGridLayout = [...this.getDashboardLayoutSm];\n  }\n\n  breakpointChanged(newBreakpoint) {\n    // console.log('breakpoint:', newBreakpoint);\n    this.currentBreakpoint = newBreakpoint;\n  }\n}\n</script>\n\n<style scoped></style>\n","\n  <GridLayout\n    class=\"h-100 w-100\"\n    :row-height=\"50\"\n    :layout.sync=\"gridLayout\"\n    :vertical-compact=\"false\"\n    :margin=\"[5, 5]\"\n    :responsive-layouts=\"responsiveGridLayouts\"\n    :is-resizable=\"!isLayoutLocked\"\n    :is-draggable=\"!isLayoutLocked\"\n    :responsive=\"true\"\n    :prevent-collision=\"true\"\n    :cols=\"{ lg: 12, md: 12, sm: 12, xs: 4, xxs: 2 }\"\n    @layout-updated=\"layoutUpdated\"\n    @breakpoint-changed=\"breakpointChanged\"\n  >\n    <GridItem\n      :i=\"gridLayoutDaily.i\"\n      :x=\"gridLayoutDaily.x\"\n      :y=\"gridLayoutDaily.y\"\n      :w=\"gridLayoutDaily.w\"\n      :h=\"gridLayoutDaily.h\"\n      :min-w=\"3\"\n      :min-h=\"4\"\n      drag-allow-from=\".drag-header\"\n    >\n      <DraggableContainer :header=\"`Daily Profit ${botCount > 1 ? 'combined' : ''}`\">\n        <DailyChart\n          v-if=\"allDailyStatsAllBots\"\n          :daily-stats=\"allDailyStatsAllBots\"\n          :show-title=\"false\"\n        />\n      </DraggableContainer>\n    </GridItem>\n    <GridItem\n      :i=\"gridLayoutBotComparison.i\"\n      :x=\"gridLayoutBotComparison.x\"\n      :y=\"gridLayoutBotComparison.y\"\n      :w=\"gridLayoutBotComparison.w\"\n      :h=\"gridLayoutBotComparison.h\"\n      :min-w=\"3\"\n      :min-h=\"4\"\n      drag-allow-from=\".drag-header\"\n    >\n      <DraggableContainer header=\"Bot comparison\">\n        <bot-comparison-list />\n      </DraggableContainer>\n    </GridItem>\n    <GridItem\n      :i=\"gridLayoutAllOpenTrades.i\"\n      :x=\"gridLayoutAllOpenTrades.x\"\n      :y=\"gridLayoutAllOpenTrades.y\"\n      :w=\"gridLayoutAllOpenTrades.w\"\n      :h=\"gridLayoutAllOpenTrades.h\"\n      :min-w=\"3\"\n      :min-h=\"4\"\n      drag-allow-from=\".drag-header\"\n    >\n      <DraggableContainer header=\"Open Trades\">\n        <trade-list :active-trades=\"true\" :trades=\"allOpenTradesAllBots\" multi-bot-view />\n      </DraggableContainer>\n    </GridItem>\n    <GridItem\n      :i=\"gridLayoutCumChart.i\"\n      :x=\"gridLayoutCumChart.x\"\n      :y=\"gridLayoutCumChart.y\"\n      :w=\"gridLayoutCumChart.w\"\n      :h=\"gridLayoutCumChart.h\"\n      :min-w=\"3\"\n      :min-h=\"4\"\n      drag-allow-from=\".drag-header\"\n    >\n<!--      <DraggableContainer header=\"Cumulative Profit\">-->\n<!--        <CumProfitChart :trades=\"allTradesAllBots\" :show-title=\"false\" />-->\n<!--      </DraggableContainer>-->\n      <DraggableContainer header=\"Trades Log\">\n        <TradesLogChart :trades=\"allTradesAllBots\" :show-title=\"false\" />\n      </DraggableContainer>\n    </GridItem>\n    <GridItem\n      :i=\"gridLayoutTradesLogChart.i\"\n      :x=\"gridLayoutTradesLogChart.x\"\n      :y=\"gridLayoutTradesLogChart.y\"\n      :w=\"gridLayoutTradesLogChart.w\"\n      :h=\"gridLayoutTradesLogChart.h\"\n      :min-w=\"3\"\n      :min-h=\"4\"\n      drag-allow-from=\".drag-header\"\n    >\n<!--      <DraggableContainer header=\"Trades Log\">-->\n<!--        <TradesLogChart :trades=\"allTradesAllBots\" :show-title=\"false\" />-->\n<!--      </DraggableContainer>-->\n    </GridItem>\n  </GridLayout>\n"],"names":["BotComparisonList","render","staticRenderFns","Dashboard"],"mappings":"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"}