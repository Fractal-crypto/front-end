{"version":3,"file":"Backtesting.7b95866b.js","sources":["../../src/components/ftbot/BacktestResultView.vue","../../src/components/ftbot/BacktestResultView.vue?vue&type=template&lang.js","../../src/components/ftbot/BacktestResultSelect.vue","../../src/components/ftbot/BacktestResultSelect.vue?vue&type=template&lang.js","../../src/views/Backtesting.vue","../../src/views/Backtesting.vue?vue&type=template&lang.js"],"sourcesContent":["<template>\n  <div class=\"container-fluid px-0 backtestresult-container\">\n    <div class=\"row d-flex justify-content-center\">\n      <h3>Backtest-result for {{ backtestResult.strategy_name }}</h3>\n    </div>\n\n    <div class=\"row text-left ml-0\">\n      <div class=\"row w-100\">\n        <div class=\"col-12 col-xl-6 px-0 px-xl-0 pr-xl-1\">\n          <b-card header=\"Strategy settings\">\n            <b-table\n              small\n              borderless\n              :items=\"backtestResultSettings\"\n              :fields=\"backtestsettingFields\"\n            >\n            </b-table>\n          </b-card>\n        </div>\n        <div class=\"col-12 col-xl-6 px-0 px-xl-0 pt-2 pt-xl-0 pl-xl-1\">\n          <b-card header=\"Metrics\">\n            <b-table small borderless :items=\"backtestResultStats\" :fields=\"backtestResultFields\">\n            </b-table>\n          </b-card>\n        </div>\n      </div>\n      <b-card header=\"Results per Sell-reason\" class=\"row mt-2 w-100\">\n        <b-table\n          small\n          hover\n          stacked=\"sm\"\n          :items=\"backtestResult.sell_reason_summary\"\n          :fields=\"perSellReason\"\n        >\n        </b-table>\n      </b-card>\n      <b-card header=\"Results per pair\" class=\"row mt-2 w-100\">\n        <b-table\n          small\n          hover\n          stacked=\"sm\"\n          :items=\"backtestResult.results_per_pair\"\n          :fields=\"perPairFields\"\n        >\n        </b-table>\n      </b-card>\n\n      <b-card header=\"Single trades\" class=\"row mt-2 w-100\">\n        <TradeList\n          class=\"row trade-history mt-2 w-100\"\n          :trades=\"backtestResult.trades\"\n          :show-filter=\"true\"\n          :stake-currency=\"backtestResult.stake_currency\"\n        />\n      </b-card>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport TradeList from '@/components/ftbot/TradeList.vue';\nimport { Component, Vue, Prop } from 'vue-property-decorator';\nimport { StrategyBacktestResult, Trade } from '@/types';\n\nimport ValuePair from '@/components/general/ValuePair.vue';\n\nimport {\n  timestampms,\n  formatPercent,\n  formatPrice,\n  humanizeDurationFromSeconds,\n} from '@/shared/formatters';\n\n@Component({\n  components: {\n    TradeList,\n    ValuePair,\n  },\n})\nexport default class BacktestResultView extends Vue {\n  @Prop({ required: true }) readonly backtestResult!: StrategyBacktestResult;\n\n  get hasBacktestResult() {\n    return !!this.backtestResult;\n  }\n\n  getSortedTrades(backtestResult: StrategyBacktestResult): Trade[] {\n    const sortedTrades = backtestResult.trades\n      .slice()\n      .sort((a, b) => a.profit_ratio - b.profit_ratio);\n    return sortedTrades;\n  }\n\n  formatPriceStake(price) {\n    return `${formatPrice(price, this.backtestResult.stake_currency_decimals)} ${\n      this.backtestResult.stake_currency\n    }`;\n  }\n\n  get bestPair(): string {\n    const trades = this.getSortedTrades(this.backtestResult);\n    const value = trades[trades.length - 1];\n    return `${value.pair} ${formatPercent(value.profit_ratio, 2)}`;\n  }\n\n  get worstPair(): string {\n    const trades = this.getSortedTrades(this.backtestResult);\n    const value = trades[0];\n    return `${value.pair} ${formatPercent(value.profit_ratio, 2)}`;\n  }\n\n  get backtestResultStats() {\n    // Transpose Result into readable format\n    return [\n      {\n        metric: 'Total Profit',\n        value: `${formatPercent(this.backtestResult.profit_total)} | ${this.formatPriceStake(\n          this.backtestResult.profit_total_abs,\n        )}`,\n      },\n      {\n        metric: 'Total trades / Daily Avg Trades',\n        value: `${this.backtestResult.total_trades} / ${this.backtestResult.trades_per_day}`,\n      },\n      // { metric: 'First trade', value: this.backtestResult.backtest_fi },\n      // { metric: 'First trade Pair', value: this.backtestResult.backtest_best_day },\n      {\n        metric: 'Best day',\n        value: `${formatPercent(\n          this.backtestResult.backtest_best_day,\n          2,\n        )} | ${this.formatPriceStake(this.backtestResult.backtest_best_day_abs)}`,\n      },\n      {\n        metric: 'Worst day',\n        value: `${formatPercent(\n          this.backtestResult.backtest_worst_day,\n          2,\n        )} | ${this.formatPriceStake(this.backtestResult.backtest_worst_day_abs)}`,\n      },\n\n      {\n        metric: 'Win/Draw/Loss',\n        value: `${\n          this.backtestResult.results_per_pair[this.backtestResult.results_per_pair.length - 1].wins\n        } / ${\n          this.backtestResult.results_per_pair[this.backtestResult.results_per_pair.length - 1]\n            .draws\n        } / ${\n          this.backtestResult.results_per_pair[this.backtestResult.results_per_pair.length - 1]\n            .losses\n        }`,\n      },\n      {\n        metric: 'Days win/draw/loss',\n        value: `${this.backtestResult.winning_days} / ${this.backtestResult.draw_days} / ${this.backtestResult.losing_days}`,\n      },\n\n      {\n        metric: 'Avg. Duration winners',\n        value: humanizeDurationFromSeconds(this.backtestResult.winner_holding_avg),\n      },\n      {\n        metric: 'Avg. Duration Losers',\n        value: humanizeDurationFromSeconds(this.backtestResult.loser_holding_avg),\n      },\n      { metric: 'Rejected buy signals', value: this.backtestResult.rejected_signals },\n\n      { metric: '___', value: '___' },\n      { metric: 'Max Drawdown', value: formatPercent(this.backtestResult.max_drawdown) },\n      {\n        metric: 'Max Drawdown ABS',\n        value: this.formatPriceStake(this.backtestResult.max_drawdown_abs),\n      },\n      { metric: 'Drawdown start', value: timestampms(this.backtestResult.drawdown_start_ts) },\n      { metric: 'Drawdown end', value: timestampms(this.backtestResult.drawdown_end_ts) },\n      { metric: '___', value: '___' },\n      { metric: 'Min balance', value: this.formatPriceStake(this.backtestResult.csum_min) },\n      { metric: 'Max balance', value: this.formatPriceStake(this.backtestResult.csum_max) },\n      { metric: 'Market change', value: formatPercent(this.backtestResult.market_change) },\n      { metric: '___', value: '___' },\n\n      {\n        metric: 'Best Pair',\n        value: `${this.backtestResult.best_pair.key} ${formatPercent(\n          this.backtestResult.best_pair.profit_sum,\n        )}`,\n      },\n      {\n        metric: 'Worst Pair',\n        value: `${this.backtestResult.worst_pair.key} ${formatPercent(\n          this.backtestResult.worst_pair.profit_sum,\n        )}`,\n      },\n      { metric: 'Best single Trade', value: this.bestPair },\n      { metric: 'Worst single Trade', value: this.worstPair },\n    ];\n  }\n\n  timestampms = timestampms;\n\n  formatPercent = formatPercent;\n\n  get backtestResultSettings() {\n    // Transpose Result into readable format\n    return [\n      { setting: 'Backtesting from', value: timestampms(this.backtestResult.backtest_start_ts) },\n      { setting: 'Backtesting to', value: timestampms(this.backtestResult.backtest_end_ts) },\n      {\n        setting: 'BT execution time',\n        value: humanizeDurationFromSeconds(\n          this.backtestResult.backtest_run_end_ts - this.backtestResult.backtest_run_start_ts,\n        ),\n      },\n      { setting: 'Max open trades', value: this.backtestResult.max_open_trades },\n      { setting: 'Timeframe', value: this.backtestResult.timeframe },\n      { setting: 'Timerange', value: this.backtestResult.timerange },\n      { setting: 'Stoploss', value: formatPercent(this.backtestResult.stoploss, 2) },\n      { setting: 'Trailing Stoploss', value: this.backtestResult.trailing_stop },\n      {\n        setting: 'Trail only when offset is reached',\n        value: this.backtestResult.trailing_only_offset_is_reached,\n      },\n      { setting: 'Trailing Stop positive', value: this.backtestResult.trailing_stop_positive },\n      {\n        setting: 'Trailing stop positive offset',\n        value: this.backtestResult.trailing_stop_positive_offset,\n      },\n      { setting: 'Custom Stoploss', value: this.backtestResult.use_custom_stoploss },\n      { setting: 'ROI', value: this.backtestResult.minimal_roi },\n      { setting: 'Use Sell Signal', value: this.backtestResult.use_sell_signal },\n      { setting: 'Sell profit only', value: this.backtestResult.sell_profit_only },\n      { setting: 'Sell profit offset', value: this.backtestResult.sell_profit_offset },\n      { setting: 'Enable protections', value: this.backtestResult.enable_protections },\n      {\n        setting: 'Starting balance',\n        value: this.formatPriceStake(this.backtestResult.starting_balance),\n      },\n      {\n        setting: 'Final balance',\n        value: this.formatPriceStake(this.backtestResult.final_balance),\n      },\n      {\n        setting: 'Avg. stake amount',\n        value: this.formatPriceStake(this.backtestResult.avg_stake_amount),\n      },\n      {\n        setting: 'Total trade volume',\n        value: this.formatPriceStake(this.backtestResult.total_volume),\n      },\n    ];\n  }\n\n  get perPairFields() {\n    return [\n      { key: 'key', label: 'Pair' },\n      { key: 'trades', label: 'Buys' },\n      { key: 'profit_mean', label: 'Avg Profit %', formatter: (value) => formatPercent(value, 2) },\n      { key: 'profit_sum', label: 'Cum Profit %', formatter: (value) => formatPercent(value, 2) },\n      {\n        key: 'profit_total_abs',\n        label: `Tot Profit ${this.backtestResult.stake_currency}`,\n        formatter: (value) => formatPrice(value, this.backtestResult.stake_currency_decimals),\n      },\n      {\n        key: 'profit_total',\n        label: 'Tot Profit %',\n        formatter: (value) => formatPercent(value, 2),\n      },\n      { key: 'duration_avg', label: 'Avg Duration' },\n      { key: 'wins', label: 'Wins' },\n      { key: 'draws', label: 'Draws' },\n      { key: 'losses', label: 'Losses' },\n    ];\n  }\n\n  get perSellReason() {\n    return [\n      { key: 'sell_reason', label: 'Sell Reason' },\n      { key: 'trades', label: 'Buys' },\n      { key: 'profit_mean', label: 'Avg Profit %', formatter: (value) => formatPercent(value, 2) },\n      { key: 'profit_sum', label: 'Cum Profit %', formatter: (value) => formatPercent(value, 2) },\n      {\n        key: 'profit_total_abs',\n        label: `Tot Profit ${this.backtestResult.stake_currency}`,\n\n        formatter: (value) => formatPrice(value, this.backtestResult.stake_currency_decimals),\n      },\n      {\n        key: 'profit_total',\n        label: 'Tot Profit %',\n        formatter: (value) => formatPercent(value, 2),\n      },\n      { key: 'wins', label: 'Wins' },\n      { key: 'draws', label: 'Draws' },\n      { key: 'losses', label: 'Losses' },\n    ];\n  }\n\n  backtestResultFields: Array<Record<string, string>> = [\n    { key: 'metric', label: 'Metric' },\n    { key: 'value', label: 'Value' },\n  ];\n\n  backtestsettingFields: Array<Record<string, string>> = [\n    { key: 'setting', label: 'Setting' },\n    { key: 'value', label: 'Value' },\n  ];\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.backtestresult-container {\n  @media (min-width: 1200px) {\n    max-width: 1200px;\n  }\n}\n</style>\n","\n<div class=\"container-fluid px-0 backtestresult-container\">\n  <div class=\"row d-flex justify-content-center\">\n    <h3>Backtest-result for {{ backtestResult.strategy_name }}</h3>\n  </div>\n\n  <div class=\"row text-left ml-0\">\n    <div class=\"row w-100\">\n      <div class=\"col-12 col-xl-6 px-0 px-xl-0 pr-xl-1\">\n        <b-card header=\"Strategy settings\">\n          <b-table\n            small\n            borderless\n            :items=\"backtestResultSettings\"\n            :fields=\"backtestsettingFields\"\n          >\n          </b-table>\n        </b-card>\n      </div>\n      <div class=\"col-12 col-xl-6 px-0 px-xl-0 pt-2 pt-xl-0 pl-xl-1\">\n        <b-card header=\"Metrics\">\n          <b-table small borderless :items=\"backtestResultStats\" :fields=\"backtestResultFields\">\n          </b-table>\n        </b-card>\n      </div>\n    </div>\n    <b-card header=\"Results per Sell-reason\" class=\"row mt-2 w-100\">\n      <b-table\n        small\n        hover\n        stacked=\"sm\"\n        :items=\"backtestResult.sell_reason_summary\"\n        :fields=\"perSellReason\"\n      >\n      </b-table>\n    </b-card>\n    <b-card header=\"Results per pair\" class=\"row mt-2 w-100\">\n      <b-table\n        small\n        hover\n        stacked=\"sm\"\n        :items=\"backtestResult.results_per_pair\"\n        :fields=\"perPairFields\"\n      >\n      </b-table>\n    </b-card>\n\n    <b-card header=\"Single trades\" class=\"row mt-2 w-100\">\n      <TradeList\n        class=\"row trade-history mt-2 w-100\"\n        :trades=\"backtestResult.trades\"\n        :show-filter=\"true\"\n        :stake-currency=\"backtestResult.stake_currency\"\n      />\n    </b-card>\n  </div>\n</div>\n","<template>\n  <div class=\"container d-flex flex-column align-items-center\">\n    <h3>Available results:</h3>\n    <b-list-group class=\"ml-2\">\n      <b-list-group-item\n        v-for=\"[key, strat] in Object.entries(backtestHistory)\"\n        :key=\"key\"\n        button\n        :active=\"key === selectedBacktestResultKey\"\n        class=\"d-flex justify-content-between align-items-center py-1\"\n        @click=\"setBacktestResult(key)\"\n      >\n        {{ key }} {{ strat.total_trades }} {{ formatPercent(strat.profit_total) }}\n      </b-list-group-item>\n    </b-list-group>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { formatPercent } from '@/shared/formatters';\nimport { StrategyBacktestResult } from '@/types';\nimport { Component, Emit, Prop, Vue } from 'vue-property-decorator';\n\n@Component({})\nexport default class BacktestResultSelect extends Vue {\n  @Prop({ required: true }) backtestHistory!: StrategyBacktestResult[];\n\n  @Prop({ required: false, default: '' }) selectedBacktestResultKey!: string;\n\n  @Emit('selectionChange')\n  setBacktestResult(key) {\n    return key;\n  }\n\n  formatPercent = formatPercent;\n}\n</script>\n\n<style scoped></style>\n","\n<div class=\"container d-flex flex-column align-items-center\">\n  <h3>Available results:</h3>\n  <b-list-group class=\"ml-2\">\n    <b-list-group-item\n      v-for=\"[key, strat] in Object.entries(backtestHistory)\"\n      :key=\"key\"\n      button\n      :active=\"key === selectedBacktestResultKey\"\n      class=\"d-flex justify-content-between align-items-center py-1\"\n      @click=\"setBacktestResult(key)\"\n    >\n      {{ key }} {{ strat.total_trades }} {{ formatPercent(strat.profit_total) }}\n    </b-list-group-item>\n  </b-list-group>\n</div>\n","<template>\n  <div class=\"container-fluid\" style=\"max-height: calc(100vh - 60px)\">\n    <div class=\"container-fluid\">\n      <div class=\"row mb-2\"></div>\n      <p v-if=\"!canRunBacktest\">Bot must be in webserver mode to enable Backtesting.</p>\n      <div class=\"row w-100\">\n        <h2 class=\"col-4 col-lg-3\">Backtesting</h2>\n        <div\n          class=\"col-12 col-lg-order-last col-lg-6 mx-md-5 d-flex flex-wrap justify-content-md-center justify-content-between mb-4\"\n          :disabled=\"canRunBacktest\"\n        >\n          <b-form-radio\n            v-model=\"btFormMode\"\n            name=\"bt-form-radios\"\n            button\n            class=\"mx-1 flex-samesize-items\"\n            value=\"run\"\n            :disabled=\"!canRunBacktest\"\n            >Run backtest</b-form-radio\n          >\n          <b-form-radio\n            v-model=\"btFormMode\"\n            name=\"bt-form-radios\"\n            button\n            class=\"mx-1 flex-samesize-items\"\n            value=\"results\"\n            :disabled=\"!hasBacktestResult\"\n            >Analyze result</b-form-radio\n          >\n          <b-form-radio\n            v-model=\"btFormMode\"\n            name=\"bt-form-radios\"\n            button\n            class=\"mx-1 flex-samesize-items\"\n            value=\"visualize-summary\"\n            :disabled=\"!hasBacktestResult\"\n            >Visualize summary</b-form-radio\n          >\n          <b-form-radio\n            v-model=\"btFormMode\"\n            name=\"bt-form-radios\"\n            button\n            class=\"mx-1 flex-samesize-items\"\n            value=\"visualize\"\n            :disabled=\"!hasBacktestResult\"\n            >Visualize result</b-form-radio\n          >\n        </div>\n        <small v-show=\"backtestRunning\" class=\"text-right bt-running-label col-8 col-lg-3\"\n          >Backtest running: {{ backtestStep }} {{ formatPercent(backtestProgress, 2) }}</small\n        >\n      </div>\n    </div>\n\n    <div class=\"d-md-flex\">\n      <!-- Left bar -->\n      <div\n        :class=\"`${showLeftBar ? 'col-md-3' : ''} sticky-top sticky-offset mr-3 d-flex flex-column`\"\n      >\n        <b-button\n          v-if=\"btFormMode !== 'visualize'\"\n          class=\"align-self-start\"\n          aria-label=\"Close\"\n          size=\"sm\"\n          @click=\"showLeftBar = !showLeftBar\"\n          >{{ showLeftBar ? '&lt;' : '&gt;' }}</b-button\n        >\n        <transition name=\"fade\" mode=\"in-out\">\n          <BacktestResultSelect\n            v-if=\"btFormMode !== 'visualize' && showLeftBar\"\n            :backtest-history=\"backtestHistory\"\n            :selected-backtest-result-key=\"selectedBacktestResultKey\"\n            @selectionChange=\"setBacktestResult\"\n          />\n        </transition>\n      </div>\n      <!-- End Left bar -->\n\n      <div v-if=\"btFormMode == 'run'\" class=\"flex-fill row d-flex flex-column bt-config\">\n        <div class=\"mb-2\">\n          <span>Strategy</span>\n          <StrategySelect v-model=\"strategy\"></StrategySelect>\n        </div>\n        <b-card bg-variant=\"light\" :disabled=\"backtestRunning\">\n          <!-- Backtesting parameters -->\n          <b-form-group\n            label-cols-lg=\"2\"\n            label=\"Backtest params\"\n            label-size=\"sm\"\n            label-class=\"font-weight-bold pt-0\"\n            class=\"mb-0\"\n          >\n            <b-form-group\n              label-cols-sm=\"5\"\n              label=\"Timeframe:\"\n              label-align-sm=\"right\"\n              label-for=\"timeframe-select\"\n            >\n              <TimeframeSelect id=\"timeframe-select\" v-model=\"selectedTimeframe\" />\n            </b-form-group>\n            <b-form-group\n              label-cols-sm=\"5\"\n              label=\"Detail Timeframe:\"\n              label-align-sm=\"right\"\n              label-for=\"timeframe-detail-select\"\n              title=\"Detail timeframe, to simulate intra-candle results. Not setting this will not use this functionality.\"\n            >\n              <TimeframeSelect\n                id=\"timeframe-detail-select\"\n                v-model=\"selectedDetailTimeframe\"\n                :below-timeframe=\"selectedTimeframe\"\n              />\n            </b-form-group>\n\n            <b-form-group\n              label-cols-sm=\"5\"\n              label=\"Max open trades:\"\n              label-align-sm=\"right\"\n              label-for=\"max-open-trades\"\n            >\n              <b-form-input\n                id=\"max-open-trades\"\n                v-model=\"maxOpenTrades\"\n                placeholder=\"Use strategy default\"\n                type=\"number\"\n              ></b-form-input>\n            </b-form-group>\n            <b-form-group\n              label-cols-sm=\"5\"\n              label=\"Starting capital:\"\n              label-align-sm=\"right\"\n              label-for=\"starting-capital\"\n            >\n              <b-form-input\n                id=\"starting-capital\"\n                v-model=\"startingCapital\"\n                type=\"number\"\n                step=\"0.001\"\n              ></b-form-input>\n            </b-form-group>\n            <b-form-group\n              label-cols-sm=\"5\"\n              label=\"Stake amount:\"\n              label-align-sm=\"right\"\n              label-for=\"stake-amount\"\n            >\n              <div class=\"d-flex\">\n                <b-form-checkbox\n                  id=\"stake-amount-bool\"\n                  v-model=\"stakeAmountUnlimited\"\n                  class=\"col-md-6\"\n                  >Unlimited stake</b-form-checkbox\n                >\n\n                <b-form-input\n                  id=\"stake-amount\"\n                  v-model=\"stakeAmount\"\n                  type=\"number\"\n                  placeholder=\"Use strategy default\"\n                  step=\"0.01\"\n                  :disabled=\"stakeAmountUnlimited\"\n                ></b-form-input>\n              </div>\n            </b-form-group>\n\n            <b-form-group\n              label-cols-sm=\"5\"\n              label=\"Enable Protections:\"\n              label-align-sm=\"right\"\n              label-for=\"enable-protections\"\n            >\n              <b-form-checkbox\n                id=\"enable-protections\"\n                v-model=\"enableProtections\"\n              ></b-form-checkbox>\n            </b-form-group>\n\n            <!-- <b-form-group label-cols-sm=\"5\" label=\"Fee:\" label-align-sm=\"right\" label-for=\"fee\">\n              <b-form-input\n                id=\"fee\"\n                type=\"number\"\n                placeholder=\"Use exchange default\"\n                step=\"0.01\"\n              ></b-form-input>\n            </b-form-group> -->\n            <hr />\n            <TimeRangeSelect v-model=\"timerange\" class=\"mt-2\"></TimeRangeSelect>\n          </b-form-group>\n        </b-card>\n\n        <h3 class=\"mt-3\">Backtesting summary</h3>\n        <div\n          class=\"d-flex flex-wrap flex-md-nowrap justify-content-between justify-content-md-center\"\n        >\n          <b-button\n            variant=\"primary\"\n            :disabled=\"backtestRunning || !canRunBacktest\"\n            class=\"mx-1\"\n            @click=\"clickBacktest\"\n          >\n            Start backtest\n          </b-button>\n          <b-button\n            variant=\"primary\"\n            :disabled=\"backtestRunning || !canRunBacktest\"\n            class=\"mx-1\"\n            @click=\"pollBacktest\"\n          >\n            Load backtest result\n          </b-button>\n          <b-button\n            variant=\"primary\"\n            class=\"mx-1\"\n            :disabled=\"!backtestRunning\"\n            @click=\"stopBacktest\"\n            >Stop Backtest</b-button\n          >\n          <b-button\n            variant=\"primary\"\n            class=\"mx-1\"\n            :disabled=\"backtestRunning || !canRunBacktest\"\n            @click=\"removeBacktest\"\n            >Reset Backtest</b-button\n          >\n        </div>\n      </div>\n      <BacktestResultView\n        v-if=\"hasBacktestResult && btFormMode == 'results'\"\n        :backtest-result=\"selectedBacktestResult\"\n        class=\"flex-fill\"\n      />\n\n      <div\n        v-if=\"hasBacktestResult && btFormMode == 'visualize-summary'\"\n        class=\"text-center flex-fill mt-2 d-flex flex-column\"\n      >\n        <TradesLogChart :trades=\"selectedBacktestResult.trades\" class=\"trades-log\" />\n        <CumProfitChart\n          :trades=\"selectedBacktestResult.trades\"\n          profit-column=\"profit_abs\"\n          class=\"cum-profit\"\n          :show-title=\"true\"\n        />\n      </div>\n    </div>\n\n    <div\n      v-if=\"hasBacktestResult && btFormMode == 'visualize'\"\n      class=\"container-fluid text-center w-100 mt-2\"\n    >\n      <p class=\"row\">\n        Graph will always show the latest values for the selected strategy. Strategy: {{ strategy }}\n      </p>\n      <div class=\"row text-center\">\n        <PairSummary\n          class=\"col-md-2 overflow-auto\"\n          style=\"max-height: calc(100vh - 200px)\"\n          :pairlist=\"selectedBacktestResult.pairlist\"\n          :trades=\"selectedBacktestResult.trades\"\n          sort-method=\"profit\"\n          :backtest-mode=\"true\"\n        />\n        <CandleChartContainer\n          :available-pairs=\"selectedBacktestResult.pairlist\"\n          :historic-view=\"!!true\"\n          :timeframe=\"timeframe\"\n          :plot-config=\"selectedPlotConfig\"\n          :timerange=\"timerange\"\n          :strategy=\"strategy\"\n          :trades=\"selectedBacktestResult.trades\"\n          class=\"col-md-10 candle-chart-container px-0 w-100 h-100\"\n        >\n        </CandleChartContainer>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Watch } from 'vue-property-decorator';\nimport { namespace } from 'vuex-class';\nimport TimeRangeSelect from '@/components/ftbot/TimeRangeSelect.vue';\nimport BacktestResultView from '@/components/ftbot/BacktestResultView.vue';\nimport BacktestResultSelect from '@/components/ftbot/BacktestResultSelect.vue';\nimport CandleChartContainer from '@/components/charts/CandleChartContainer.vue';\nimport StrategySelect from '@/components/ftbot/StrategySelect.vue';\nimport ValuePair from '@/components/general/ValuePair.vue';\nimport CumProfitChart from '@/components/charts/CumProfitChart.vue';\nimport TradesLogChart from '@/components/charts/TradesLog.vue';\nimport PairSummary from '@/components/ftbot/PairSummary.vue';\nimport TimeframeSelect from '@/components/ftbot/TimeframeSelect.vue';\n\nimport {\n  BacktestPayload,\n  BacktestSteps,\n  BotState,\n  PairHistory,\n  PairHistoryPayload,\n  PlotConfig,\n  StrategyBacktestResult,\n} from '@/types';\n\nimport { getCustomPlotConfig, getPlotConfigName } from '@/shared/storage';\nimport { formatPercent } from '@/shared/formatters';\nimport { BotStoreGetters } from '@/store/modules/ftbot';\nimport StoreModules from '@/store/storeSubModules';\n\nconst ftbot = namespace(StoreModules.ftbot);\n@Component({\n  components: {\n    BacktestResultView,\n    BacktestResultSelect,\n    TimeRangeSelect,\n    CandleChartContainer,\n    CumProfitChart,\n    TradesLogChart,\n    StrategySelect,\n    ValuePair,\n    PairSummary,\n    TimeframeSelect,\n  },\n})\nexport default class Backtesting extends Vue {\n  pollInterval: number | null = null;\n\n  showLeftBar = false;\n\n  selectedTimeframe = '';\n\n  selectedDetailTimeframe = '';\n\n  strategy = '';\n\n  timerange = '';\n\n  enableProtections = false;\n\n  maxOpenTrades = '';\n\n  stakeAmountUnlimited = false;\n\n  stakeAmount = '';\n\n  startingCapital = '';\n\n  btFormMode = 'run';\n\n  selectedPlotConfig: PlotConfig = getCustomPlotConfig(getPlotConfigName());\n\n  @ftbot.Getter [BotStoreGetters.backtestRunning]!: boolean;\n\n  @ftbot.Getter [BotStoreGetters.backtestStep]!: BacktestSteps;\n\n  @ftbot.Getter [BotStoreGetters.botState]?: BotState;\n\n  @ftbot.Getter [BotStoreGetters.backtestProgress]!: number;\n\n  @ftbot.Getter [BotStoreGetters.backtestHistory]!: StrategyBacktestResult[];\n\n  @ftbot.Getter [BotStoreGetters.selectedBacktestResultKey]!: string;\n\n  @ftbot.Getter [BotStoreGetters.history]!: PairHistory;\n\n  @ftbot.Getter [BotStoreGetters.selectedBacktestResult]!: StrategyBacktestResult;\n\n  @ftbot.Getter [BotStoreGetters.canRunBacktest]!: boolean;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @ftbot.Action getPairHistory!: (payload: PairHistoryPayload) => void;\n\n  @ftbot.Action getState;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @ftbot.Action startBacktest!: (payload: BacktestPayload) => void;\n\n  @ftbot.Action pollBacktest!: () => void;\n\n  @ftbot.Action removeBacktest!: () => void;\n\n  @ftbot.Action stopBacktest!: () => void;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  @ftbot.Action setBacktestResultKey!: (key: string) => void;\n\n  formatPercent = formatPercent;\n\n  get hasBacktestResult() {\n    return this.backtestHistory ? Object.keys(this.backtestHistory).length !== 0 : false;\n  }\n\n  get timeframe(): string {\n    try {\n      return this.selectedBacktestResult.timeframe;\n    } catch (err) {\n      return '';\n    }\n  }\n\n  mounted() {\n    this.getState();\n  }\n\n  setBacktestResult(key: string) {\n    this.setBacktestResultKey(key);\n\n    // Set parameters for this result\n    this.strategy = this.selectedBacktestResult.strategy_name;\n    this.selectedTimeframe = this.selectedBacktestResult.timeframe;\n    this.selectedDetailTimeframe = this.selectedBacktestResult.timeframe_detail || '';\n    this.timerange = this.selectedBacktestResult.timerange;\n  }\n\n  clickBacktest() {\n    const btPayload: BacktestPayload = {\n      strategy: this.strategy,\n      timerange: this.timerange,\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      enable_protections: this.enableProtections,\n    };\n    const openTradesInt = parseInt(this.maxOpenTrades, 10);\n    if (openTradesInt) {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      btPayload.max_open_trades = openTradesInt;\n    }\n    if (this.stakeAmountUnlimited) {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      btPayload.stake_amount = 'unlimited';\n    } else {\n      const stakeAmount = Number(this.stakeAmount);\n      if (stakeAmount) {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        btPayload.stake_amount = stakeAmount.toString();\n      }\n    }\n\n    const startingCapital = Number(this.startingCapital);\n    if (startingCapital) {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      btPayload.dry_run_wallet = startingCapital;\n    }\n\n    if (this.selectedTimeframe) {\n      btPayload.timeframe = this.selectedTimeframe;\n    }\n    if (this.selectedDetailTimeframe) {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      btPayload.timeframe_detail = this.selectedDetailTimeframe;\n    }\n\n    this.startBacktest(btPayload);\n  }\n\n  @Watch('backtestRunning')\n  backtestRunningChanged() {\n    if (this.backtestRunning === true) {\n      this.pollInterval = window.setInterval(this.pollBacktest, 1000);\n    } else if (this.pollInterval) {\n      clearInterval(this.pollInterval);\n      this.pollInterval = null;\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.candle-chart-container {\n  // TODO: Rough estimate - still to fix correctly\n  // Applies to all \"calc\" usages in this file.\n  height: calc(100vh - 250px) !important;\n}\n\n.cum-profit {\n  height: 350px;\n  max-height: 350px;\n}\n.trades-log {\n  height: 350px;\n  max-height: 350px;\n}\n.bt-running-label {\n  position: absolute;\n  right: 2em;\n  margin-top: 1em;\n}\n\n.sticky-offset {\n  top: 2em;\n}\n.flex-samesize-items {\n  flex: 1 1 0;\n  @media md {\n    flex: unset;\n  }\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: all 0.2s;\n}\n\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n\n.bt-config {\n  @media (min-width: 992px) {\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 75vw;\n  }\n}\n</style>\n","\n<div class=\"container-fluid\" style=\"max-height: calc(100vh - 60px)\">\n  <div class=\"container-fluid\">\n    <div class=\"row mb-2\"></div>\n    <p v-if=\"!canRunBacktest\">Bot must be in webserver mode to enable Backtesting.</p>\n    <div class=\"row w-100\">\n      <h2 class=\"col-4 col-lg-3\">Backtesting</h2>\n      <div\n        class=\"col-12 col-lg-order-last col-lg-6 mx-md-5 d-flex flex-wrap justify-content-md-center justify-content-between mb-4\"\n        :disabled=\"canRunBacktest\"\n      >\n        <b-form-radio\n          v-model=\"btFormMode\"\n          name=\"bt-form-radios\"\n          button\n          class=\"mx-1 flex-samesize-items\"\n          value=\"run\"\n          :disabled=\"!canRunBacktest\"\n          >Run backtest</b-form-radio\n        >\n        <b-form-radio\n          v-model=\"btFormMode\"\n          name=\"bt-form-radios\"\n          button\n          class=\"mx-1 flex-samesize-items\"\n          value=\"results\"\n          :disabled=\"!hasBacktestResult\"\n          >Analyze result</b-form-radio\n        >\n        <b-form-radio\n          v-model=\"btFormMode\"\n          name=\"bt-form-radios\"\n          button\n          class=\"mx-1 flex-samesize-items\"\n          value=\"visualize-summary\"\n          :disabled=\"!hasBacktestResult\"\n          >Visualize summary</b-form-radio\n        >\n        <b-form-radio\n          v-model=\"btFormMode\"\n          name=\"bt-form-radios\"\n          button\n          class=\"mx-1 flex-samesize-items\"\n          value=\"visualize\"\n          :disabled=\"!hasBacktestResult\"\n          >Visualize result</b-form-radio\n        >\n      </div>\n      <small v-show=\"backtestRunning\" class=\"text-right bt-running-label col-8 col-lg-3\"\n        >Backtest running: {{ backtestStep }} {{ formatPercent(backtestProgress, 2) }}</small\n      >\n    </div>\n  </div>\n\n  <div class=\"d-md-flex\">\n    <!-- Left bar -->\n    <div\n      :class=\"`${showLeftBar ? 'col-md-3' : ''} sticky-top sticky-offset mr-3 d-flex flex-column`\"\n    >\n      <b-button\n        v-if=\"btFormMode !== 'visualize'\"\n        class=\"align-self-start\"\n        aria-label=\"Close\"\n        size=\"sm\"\n        @click=\"showLeftBar = !showLeftBar\"\n        >{{ showLeftBar ? '&lt;' : '&gt;' }}</b-button\n      >\n      <transition name=\"fade\" mode=\"in-out\">\n        <BacktestResultSelect\n          v-if=\"btFormMode !== 'visualize' && showLeftBar\"\n          :backtest-history=\"backtestHistory\"\n          :selected-backtest-result-key=\"selectedBacktestResultKey\"\n          @selectionChange=\"setBacktestResult\"\n        />\n      </transition>\n    </div>\n    <!-- End Left bar -->\n\n    <div v-if=\"btFormMode == 'run'\" class=\"flex-fill row d-flex flex-column bt-config\">\n      <div class=\"mb-2\">\n        <span>Strategy</span>\n        <StrategySelect v-model=\"strategy\"></StrategySelect>\n      </div>\n      <b-card bg-variant=\"light\" :disabled=\"backtestRunning\">\n        <!-- Backtesting parameters -->\n        <b-form-group\n          label-cols-lg=\"2\"\n          label=\"Backtest params\"\n          label-size=\"sm\"\n          label-class=\"font-weight-bold pt-0\"\n          class=\"mb-0\"\n        >\n          <b-form-group\n            label-cols-sm=\"5\"\n            label=\"Timeframe:\"\n            label-align-sm=\"right\"\n            label-for=\"timeframe-select\"\n          >\n            <TimeframeSelect id=\"timeframe-select\" v-model=\"selectedTimeframe\" />\n          </b-form-group>\n          <b-form-group\n            label-cols-sm=\"5\"\n            label=\"Detail Timeframe:\"\n            label-align-sm=\"right\"\n            label-for=\"timeframe-detail-select\"\n            title=\"Detail timeframe, to simulate intra-candle results. Not setting this will not use this functionality.\"\n          >\n            <TimeframeSelect\n              id=\"timeframe-detail-select\"\n              v-model=\"selectedDetailTimeframe\"\n              :below-timeframe=\"selectedTimeframe\"\n            />\n          </b-form-group>\n\n          <b-form-group\n            label-cols-sm=\"5\"\n            label=\"Max open trades:\"\n            label-align-sm=\"right\"\n            label-for=\"max-open-trades\"\n          >\n            <b-form-input\n              id=\"max-open-trades\"\n              v-model=\"maxOpenTrades\"\n              placeholder=\"Use strategy default\"\n              type=\"number\"\n            ></b-form-input>\n          </b-form-group>\n          <b-form-group\n            label-cols-sm=\"5\"\n            label=\"Starting capital:\"\n            label-align-sm=\"right\"\n            label-for=\"starting-capital\"\n          >\n            <b-form-input\n              id=\"starting-capital\"\n              v-model=\"startingCapital\"\n              type=\"number\"\n              step=\"0.001\"\n            ></b-form-input>\n          </b-form-group>\n          <b-form-group\n            label-cols-sm=\"5\"\n            label=\"Stake amount:\"\n            label-align-sm=\"right\"\n            label-for=\"stake-amount\"\n          >\n            <div class=\"d-flex\">\n              <b-form-checkbox\n                id=\"stake-amount-bool\"\n                v-model=\"stakeAmountUnlimited\"\n                class=\"col-md-6\"\n                >Unlimited stake</b-form-checkbox\n              >\n\n              <b-form-input\n                id=\"stake-amount\"\n                v-model=\"stakeAmount\"\n                type=\"number\"\n                placeholder=\"Use strategy default\"\n                step=\"0.01\"\n                :disabled=\"stakeAmountUnlimited\"\n              ></b-form-input>\n            </div>\n          </b-form-group>\n\n          <b-form-group\n            label-cols-sm=\"5\"\n            label=\"Enable Protections:\"\n            label-align-sm=\"right\"\n            label-for=\"enable-protections\"\n          >\n            <b-form-checkbox\n              id=\"enable-protections\"\n              v-model=\"enableProtections\"\n            ></b-form-checkbox>\n          </b-form-group>\n\n          <!-- <b-form-group label-cols-sm=\"5\" label=\"Fee:\" label-align-sm=\"right\" label-for=\"fee\">\n            <b-form-input\n              id=\"fee\"\n              type=\"number\"\n              placeholder=\"Use exchange default\"\n              step=\"0.01\"\n            ></b-form-input>\n          </b-form-group> -->\n          <hr />\n          <TimeRangeSelect v-model=\"timerange\" class=\"mt-2\"></TimeRangeSelect>\n        </b-form-group>\n      </b-card>\n\n      <h3 class=\"mt-3\">Backtesting summary</h3>\n      <div\n        class=\"d-flex flex-wrap flex-md-nowrap justify-content-between justify-content-md-center\"\n      >\n        <b-button\n          variant=\"primary\"\n          :disabled=\"backtestRunning || !canRunBacktest\"\n          class=\"mx-1\"\n          @click=\"clickBacktest\"\n        >\n          Start backtest\n        </b-button>\n        <b-button\n          variant=\"primary\"\n          :disabled=\"backtestRunning || !canRunBacktest\"\n          class=\"mx-1\"\n          @click=\"pollBacktest\"\n        >\n          Load backtest result\n        </b-button>\n        <b-button\n          variant=\"primary\"\n          class=\"mx-1\"\n          :disabled=\"!backtestRunning\"\n          @click=\"stopBacktest\"\n          >Stop Backtest</b-button\n        >\n        <b-button\n          variant=\"primary\"\n          class=\"mx-1\"\n          :disabled=\"backtestRunning || !canRunBacktest\"\n          @click=\"removeBacktest\"\n          >Reset Backtest</b-button\n        >\n      </div>\n    </div>\n    <BacktestResultView\n      v-if=\"hasBacktestResult && btFormMode == 'results'\"\n      :backtest-result=\"selectedBacktestResult\"\n      class=\"flex-fill\"\n    />\n\n    <div\n      v-if=\"hasBacktestResult && btFormMode == 'visualize-summary'\"\n      class=\"text-center flex-fill mt-2 d-flex flex-column\"\n    >\n      <TradesLogChart :trades=\"selectedBacktestResult.trades\" class=\"trades-log\" />\n      <CumProfitChart\n        :trades=\"selectedBacktestResult.trades\"\n        profit-column=\"profit_abs\"\n        class=\"cum-profit\"\n        :show-title=\"true\"\n      />\n    </div>\n  </div>\n\n  <div\n    v-if=\"hasBacktestResult && btFormMode == 'visualize'\"\n    class=\"container-fluid text-center w-100 mt-2\"\n  >\n    <p class=\"row\">\n      Graph will always show the latest values for the selected strategy. Strategy: {{ strategy }}\n    </p>\n    <div class=\"row text-center\">\n      <PairSummary\n        class=\"col-md-2 overflow-auto\"\n        style=\"max-height: calc(100vh - 200px)\"\n        :pairlist=\"selectedBacktestResult.pairlist\"\n        :trades=\"selectedBacktestResult.trades\"\n        sort-method=\"profit\"\n        :backtest-mode=\"true\"\n      />\n      <CandleChartContainer\n        :available-pairs=\"selectedBacktestResult.pairlist\"\n        :historic-view=\"!!true\"\n        :timeframe=\"timeframe\"\n        :plot-config=\"selectedPlotConfig\"\n        :timerange=\"timerange\"\n        :strategy=\"strategy\"\n        :trades=\"selectedBacktestResult.trades\"\n        class=\"col-md-10 candle-chart-container px-0 w-100 h-100\"\n      >\n      </CandleChartContainer>\n    </div>\n  </div>\n</div>\n"],"names":["BacktestResultView","render","staticRenderFns","BacktestResultSelect","Backtesting"],"mappings":"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"}