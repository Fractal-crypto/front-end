import { Store } from 'vuex';
import { KnownKeys, RefTypes, ExtractTypes, ExtractGetterTypes } from './util';
import { useActions, useState, useGetters, useMutations } from './global';
export declare const useNamespacedActions: typeof useActions;
export declare const useNamespacedGetters: typeof useGetters;
export declare const useNamespacedMutations: typeof useMutations;
export declare const useNamespacedState: typeof useState;
export declare function createNamespacedHelpers<TState = any, TGetters = any, TActions = any, TMutations = any>(storeOrNamespace: Store<any> | string, namespace?: string): {
    useState: (map?: KnownKeys<TState>[]) => RefTypes<TState>;
    useGetters: (map?: KnownKeys<TGetters>[]) => ExtractGetterTypes<TGetters>;
    useMutations: (map?: KnownKeys<TMutations>[]) => ExtractTypes<TMutations, Function>;
    useActions: (map?: KnownKeys<TActions>[]) => ExtractTypes<TActions, Function>;
};
